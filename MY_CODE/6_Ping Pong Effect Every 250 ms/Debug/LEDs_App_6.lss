
LEDs_App_6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002140  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00002140  000021b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001110  00000000  00000000  000021d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000bb7  00000000  00000000  000032e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00003e9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00003fdb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000414b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00005d94  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00006c7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00007a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00007b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00007e19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000085e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e4       	ldi	r30, 0x40	; 64
      68:	f1 e2       	ldi	r31, 0x21	; 33
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 38       	cpi	r26, 0x80	; 128
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 b9 0a 	call	0x1572	; 0x1572 <main>
      7a:	0c 94 9e 10 	jmp	0x213c	; 0x213c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 67 10 	jmp	0x20ce	; 0x20ce <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 83 10 	jmp	0x2106	; 0x2106 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 67 10 	jmp	0x20ce	; 0x20ce <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 83 10 	jmp	0x2106	; 0x2106 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 77 10 	jmp	0x20ee	; 0x20ee <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 93 10 	jmp	0x2126	; 0x2126 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enumSetPinDirection>:
 * return : its status
 */


DIO_ErrorStatus DIO_enumSetPinDirection (u8 Copy_u8PORT , u8 Copy_u8PIN , u8 Copy_u8Direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	28 97       	sbiw	r28, 0x08	; 8
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	6b 83       	std	Y+3, r22	; 0x03
     b4e:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumState = DIO_OK ;
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	89 83       	std	Y+1, r24	; 0x01
	//Make sure that the Port ID and Pin ID are in the valid range
	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
     b54:	8a 81       	ldd	r24, Y+2	; 0x02
     b56:	84 30       	cpi	r24, 0x04	; 4
     b58:	08 f0       	brcs	.+2      	; 0xb5c <DIO_enumSetPinDirection+0x26>
     b5a:	f1 c0       	rjmp	.+482    	; 0xd3e <DIO_enumSetPinDirection+0x208>
     b5c:	8b 81       	ldd	r24, Y+3	; 0x03
     b5e:	88 30       	cpi	r24, 0x08	; 8
     b60:	08 f0       	brcs	.+2      	; 0xb64 <DIO_enumSetPinDirection+0x2e>
     b62:	ed c0       	rjmp	.+474    	; 0xd3e <DIO_enumSetPinDirection+0x208>
	{
		//Check on the Pin Direction
		if (Copy_u8Direction == DIO_PIN_OUTPUT)
     b64:	8c 81       	ldd	r24, Y+4	; 0x04
     b66:	81 30       	cpi	r24, 0x01	; 1
     b68:	09 f0       	breq	.+2      	; 0xb6c <DIO_enumSetPinDirection+0x36>
     b6a:	6f c0       	rjmp	.+222    	; 0xc4a <DIO_enumSetPinDirection+0x114>
		{
			//Check on the Required PORT Number
			switch (Copy_u8PORT)
     b6c:	8a 81       	ldd	r24, Y+2	; 0x02
     b6e:	28 2f       	mov	r18, r24
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	38 87       	std	Y+8, r19	; 0x08
     b74:	2f 83       	std	Y+7, r18	; 0x07
     b76:	8f 81       	ldd	r24, Y+7	; 0x07
     b78:	98 85       	ldd	r25, Y+8	; 0x08
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	91 05       	cpc	r25, r1
     b7e:	49 f1       	breq	.+82     	; 0xbd2 <DIO_enumSetPinDirection+0x9c>
     b80:	2f 81       	ldd	r18, Y+7	; 0x07
     b82:	38 85       	ldd	r19, Y+8	; 0x08
     b84:	22 30       	cpi	r18, 0x02	; 2
     b86:	31 05       	cpc	r19, r1
     b88:	2c f4       	brge	.+10     	; 0xb94 <DIO_enumSetPinDirection+0x5e>
     b8a:	8f 81       	ldd	r24, Y+7	; 0x07
     b8c:	98 85       	ldd	r25, Y+8	; 0x08
     b8e:	00 97       	sbiw	r24, 0x00	; 0
     b90:	61 f0       	breq	.+24     	; 0xbaa <DIO_enumSetPinDirection+0x74>
     b92:	d6 c0       	rjmp	.+428    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
     b94:	2f 81       	ldd	r18, Y+7	; 0x07
     b96:	38 85       	ldd	r19, Y+8	; 0x08
     b98:	22 30       	cpi	r18, 0x02	; 2
     b9a:	31 05       	cpc	r19, r1
     b9c:	71 f1       	breq	.+92     	; 0xbfa <DIO_enumSetPinDirection+0xc4>
     b9e:	8f 81       	ldd	r24, Y+7	; 0x07
     ba0:	98 85       	ldd	r25, Y+8	; 0x08
     ba2:	83 30       	cpi	r24, 0x03	; 3
     ba4:	91 05       	cpc	r25, r1
     ba6:	e9 f1       	breq	.+122    	; 0xc22 <DIO_enumSetPinDirection+0xec>
     ba8:	cb c0       	rjmp	.+406    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			{
			case DIO_PORTA : SET_BIT(DDRA,Copy_u8PIN);break;
     baa:	aa e3       	ldi	r26, 0x3A	; 58
     bac:	b0 e0       	ldi	r27, 0x00	; 0
     bae:	ea e3       	ldi	r30, 0x3A	; 58
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	80 81       	ld	r24, Z
     bb4:	48 2f       	mov	r20, r24
     bb6:	8b 81       	ldd	r24, Y+3	; 0x03
     bb8:	28 2f       	mov	r18, r24
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	02 2e       	mov	r0, r18
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <DIO_enumSetPinDirection+0x92>
     bc4:	88 0f       	add	r24, r24
     bc6:	99 1f       	adc	r25, r25
     bc8:	0a 94       	dec	r0
     bca:	e2 f7       	brpl	.-8      	; 0xbc4 <DIO_enumSetPinDirection+0x8e>
     bcc:	84 2b       	or	r24, r20
     bce:	8c 93       	st	X, r24
     bd0:	b7 c0       	rjmp	.+366    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTB : SET_BIT(DDRB,Copy_u8PIN);break;
     bd2:	a7 e3       	ldi	r26, 0x37	; 55
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	e7 e3       	ldi	r30, 0x37	; 55
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	80 81       	ld	r24, Z
     bdc:	48 2f       	mov	r20, r24
     bde:	8b 81       	ldd	r24, Y+3	; 0x03
     be0:	28 2f       	mov	r18, r24
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	02 2e       	mov	r0, r18
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <DIO_enumSetPinDirection+0xba>
     bec:	88 0f       	add	r24, r24
     bee:	99 1f       	adc	r25, r25
     bf0:	0a 94       	dec	r0
     bf2:	e2 f7       	brpl	.-8      	; 0xbec <DIO_enumSetPinDirection+0xb6>
     bf4:	84 2b       	or	r24, r20
     bf6:	8c 93       	st	X, r24
     bf8:	a3 c0       	rjmp	.+326    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTC : SET_BIT(DDRC,Copy_u8PIN);break;
     bfa:	a4 e3       	ldi	r26, 0x34	; 52
     bfc:	b0 e0       	ldi	r27, 0x00	; 0
     bfe:	e4 e3       	ldi	r30, 0x34	; 52
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	80 81       	ld	r24, Z
     c04:	48 2f       	mov	r20, r24
     c06:	8b 81       	ldd	r24, Y+3	; 0x03
     c08:	28 2f       	mov	r18, r24
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	02 2e       	mov	r0, r18
     c12:	02 c0       	rjmp	.+4      	; 0xc18 <DIO_enumSetPinDirection+0xe2>
     c14:	88 0f       	add	r24, r24
     c16:	99 1f       	adc	r25, r25
     c18:	0a 94       	dec	r0
     c1a:	e2 f7       	brpl	.-8      	; 0xc14 <DIO_enumSetPinDirection+0xde>
     c1c:	84 2b       	or	r24, r20
     c1e:	8c 93       	st	X, r24
     c20:	8f c0       	rjmp	.+286    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTD : SET_BIT(DDRD,Copy_u8PIN);break;		
     c22:	a1 e3       	ldi	r26, 0x31	; 49
     c24:	b0 e0       	ldi	r27, 0x00	; 0
     c26:	e1 e3       	ldi	r30, 0x31	; 49
     c28:	f0 e0       	ldi	r31, 0x00	; 0
     c2a:	80 81       	ld	r24, Z
     c2c:	48 2f       	mov	r20, r24
     c2e:	8b 81       	ldd	r24, Y+3	; 0x03
     c30:	28 2f       	mov	r18, r24
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	02 2e       	mov	r0, r18
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <DIO_enumSetPinDirection+0x10a>
     c3c:	88 0f       	add	r24, r24
     c3e:	99 1f       	adc	r25, r25
     c40:	0a 94       	dec	r0
     c42:	e2 f7       	brpl	.-8      	; 0xc3c <DIO_enumSetPinDirection+0x106>
     c44:	84 2b       	or	r24, r20
     c46:	8c 93       	st	X, r24
     c48:	7b c0       	rjmp	.+246    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			}
		}
		//Check on the Pin Direction
		else if (Copy_u8Direction == DIO_PIN_INPUT)
     c4a:	8c 81       	ldd	r24, Y+4	; 0x04
     c4c:	88 23       	and	r24, r24
     c4e:	09 f0       	breq	.+2      	; 0xc52 <DIO_enumSetPinDirection+0x11c>
     c50:	74 c0       	rjmp	.+232    	; 0xd3a <DIO_enumSetPinDirection+0x204>
		{
			//Check on the Required PORT Number
			switch (Copy_u8PORT)
     c52:	8a 81       	ldd	r24, Y+2	; 0x02
     c54:	28 2f       	mov	r18, r24
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	3e 83       	std	Y+6, r19	; 0x06
     c5a:	2d 83       	std	Y+5, r18	; 0x05
     c5c:	8d 81       	ldd	r24, Y+5	; 0x05
     c5e:	9e 81       	ldd	r25, Y+6	; 0x06
     c60:	81 30       	cpi	r24, 0x01	; 1
     c62:	91 05       	cpc	r25, r1
     c64:	59 f1       	breq	.+86     	; 0xcbc <DIO_enumSetPinDirection+0x186>
     c66:	2d 81       	ldd	r18, Y+5	; 0x05
     c68:	3e 81       	ldd	r19, Y+6	; 0x06
     c6a:	22 30       	cpi	r18, 0x02	; 2
     c6c:	31 05       	cpc	r19, r1
     c6e:	2c f4       	brge	.+10     	; 0xc7a <DIO_enumSetPinDirection+0x144>
     c70:	8d 81       	ldd	r24, Y+5	; 0x05
     c72:	9e 81       	ldd	r25, Y+6	; 0x06
     c74:	00 97       	sbiw	r24, 0x00	; 0
     c76:	69 f0       	breq	.+26     	; 0xc92 <DIO_enumSetPinDirection+0x15c>
     c78:	63 c0       	rjmp	.+198    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
     c7a:	2d 81       	ldd	r18, Y+5	; 0x05
     c7c:	3e 81       	ldd	r19, Y+6	; 0x06
     c7e:	22 30       	cpi	r18, 0x02	; 2
     c80:	31 05       	cpc	r19, r1
     c82:	89 f1       	breq	.+98     	; 0xce6 <DIO_enumSetPinDirection+0x1b0>
     c84:	8d 81       	ldd	r24, Y+5	; 0x05
     c86:	9e 81       	ldd	r25, Y+6	; 0x06
     c88:	83 30       	cpi	r24, 0x03	; 3
     c8a:	91 05       	cpc	r25, r1
     c8c:	09 f4       	brne	.+2      	; 0xc90 <DIO_enumSetPinDirection+0x15a>
     c8e:	40 c0       	rjmp	.+128    	; 0xd10 <DIO_enumSetPinDirection+0x1da>
     c90:	57 c0       	rjmp	.+174    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			{
			case DIO_PORTA : CLR_BIT(DDRA,Copy_u8PIN);break;
     c92:	aa e3       	ldi	r26, 0x3A	; 58
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	ea e3       	ldi	r30, 0x3A	; 58
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	48 2f       	mov	r20, r24
     c9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	02 2e       	mov	r0, r18
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <DIO_enumSetPinDirection+0x17a>
     cac:	88 0f       	add	r24, r24
     cae:	99 1f       	adc	r25, r25
     cb0:	0a 94       	dec	r0
     cb2:	e2 f7       	brpl	.-8      	; 0xcac <DIO_enumSetPinDirection+0x176>
     cb4:	80 95       	com	r24
     cb6:	84 23       	and	r24, r20
     cb8:	8c 93       	st	X, r24
     cba:	42 c0       	rjmp	.+132    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTB : CLR_BIT(DDRB,Copy_u8PIN);break;
     cbc:	a7 e3       	ldi	r26, 0x37	; 55
     cbe:	b0 e0       	ldi	r27, 0x00	; 0
     cc0:	e7 e3       	ldi	r30, 0x37	; 55
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	80 81       	ld	r24, Z
     cc6:	48 2f       	mov	r20, r24
     cc8:	8b 81       	ldd	r24, Y+3	; 0x03
     cca:	28 2f       	mov	r18, r24
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	02 2e       	mov	r0, r18
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <DIO_enumSetPinDirection+0x1a4>
     cd6:	88 0f       	add	r24, r24
     cd8:	99 1f       	adc	r25, r25
     cda:	0a 94       	dec	r0
     cdc:	e2 f7       	brpl	.-8      	; 0xcd6 <DIO_enumSetPinDirection+0x1a0>
     cde:	80 95       	com	r24
     ce0:	84 23       	and	r24, r20
     ce2:	8c 93       	st	X, r24
     ce4:	2d c0       	rjmp	.+90     	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTC : CLR_BIT(DDRC,Copy_u8PIN);break;
     ce6:	a4 e3       	ldi	r26, 0x34	; 52
     ce8:	b0 e0       	ldi	r27, 0x00	; 0
     cea:	e4 e3       	ldi	r30, 0x34	; 52
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	80 81       	ld	r24, Z
     cf0:	48 2f       	mov	r20, r24
     cf2:	8b 81       	ldd	r24, Y+3	; 0x03
     cf4:	28 2f       	mov	r18, r24
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	02 2e       	mov	r0, r18
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <DIO_enumSetPinDirection+0x1ce>
     d00:	88 0f       	add	r24, r24
     d02:	99 1f       	adc	r25, r25
     d04:	0a 94       	dec	r0
     d06:	e2 f7       	brpl	.-8      	; 0xd00 <DIO_enumSetPinDirection+0x1ca>
     d08:	80 95       	com	r24
     d0a:	84 23       	and	r24, r20
     d0c:	8c 93       	st	X, r24
     d0e:	18 c0       	rjmp	.+48     	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTD : CLR_BIT(DDRD,Copy_u8PIN);break;		
     d10:	a1 e3       	ldi	r26, 0x31	; 49
     d12:	b0 e0       	ldi	r27, 0x00	; 0
     d14:	e1 e3       	ldi	r30, 0x31	; 49
     d16:	f0 e0       	ldi	r31, 0x00	; 0
     d18:	80 81       	ld	r24, Z
     d1a:	48 2f       	mov	r20, r24
     d1c:	8b 81       	ldd	r24, Y+3	; 0x03
     d1e:	28 2f       	mov	r18, r24
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	02 2e       	mov	r0, r18
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <DIO_enumSetPinDirection+0x1f8>
     d2a:	88 0f       	add	r24, r24
     d2c:	99 1f       	adc	r25, r25
     d2e:	0a 94       	dec	r0
     d30:	e2 f7       	brpl	.-8      	; 0xd2a <DIO_enumSetPinDirection+0x1f4>
     d32:	80 95       	com	r24
     d34:	84 23       	and	r24, r20
     d36:	8c 93       	st	X, r24
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			}
		}	
		else
		{
			//in case of error in the Pin ID or PORT ID
			LOC_enumState = DIO_NOK ;
     d3a:	19 82       	std	Y+1, r1	; 0x01
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <DIO_enumSetPinDirection+0x20a>
		
	}
	else
	{
		//in case of error in the Pin ID or PORT ID
		LOC_enumState = DIO_NOK ;
     d3e:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState ;
     d40:	89 81       	ldd	r24, Y+1	; 0x01

}
     d42:	28 96       	adiw	r28, 0x08	; 8
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	f8 94       	cli
     d48:	de bf       	out	0x3e, r29	; 62
     d4a:	0f be       	out	0x3f, r0	; 63
     d4c:	cd bf       	out	0x3d, r28	; 61
     d4e:	cf 91       	pop	r28
     d50:	df 91       	pop	r29
     d52:	08 95       	ret

00000d54 <DIO_enumSetPinValue>:
  	  =>Copy_u8PIN  --> Pin Number [ DIO_PIN0 , DIO_PIN1 , DIO_PIN2 , DIO_PIN3 , DIO_PIN4 , DIO_PIN5 , DIO_PIN6 , DIO_PIN7 ]
  	  =>Copy_u8Value --> Pin Direction [ DIO_PIN_HIGH , DIO_PIN_LOW ]
 * return : its status
 */
DIO_ErrorStatus DIO_enumSetPinValue (u8 Copy_u8PORT , u8 Copy_u8PIN , u8 Copy_u8Value ) 
{
     d54:	df 93       	push	r29
     d56:	cf 93       	push	r28
     d58:	cd b7       	in	r28, 0x3d	; 61
     d5a:	de b7       	in	r29, 0x3e	; 62
     d5c:	28 97       	sbiw	r28, 0x08	; 8
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	f8 94       	cli
     d62:	de bf       	out	0x3e, r29	; 62
     d64:	0f be       	out	0x3f, r0	; 63
     d66:	cd bf       	out	0x3d, r28	; 61
     d68:	8a 83       	std	Y+2, r24	; 0x02
     d6a:	6b 83       	std	Y+3, r22	; 0x03
     d6c:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	89 83       	std	Y+1, r24	; 0x01

	//Make sure that the Port ID and Pin ID are in the valid range
	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
     d72:	8a 81       	ldd	r24, Y+2	; 0x02
     d74:	84 30       	cpi	r24, 0x04	; 4
     d76:	08 f0       	brcs	.+2      	; 0xd7a <DIO_enumSetPinValue+0x26>
     d78:	f1 c0       	rjmp	.+482    	; 0xf5c <DIO_enumSetPinValue+0x208>
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	88 30       	cpi	r24, 0x08	; 8
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <DIO_enumSetPinValue+0x2e>
     d80:	ed c0       	rjmp	.+474    	; 0xf5c <DIO_enumSetPinValue+0x208>
	{
		//Check on the Pin Option Value
		if (Copy_u8Value == DIO_PIN_HIGH)
     d82:	8c 81       	ldd	r24, Y+4	; 0x04
     d84:	81 30       	cpi	r24, 0x01	; 1
     d86:	09 f0       	breq	.+2      	; 0xd8a <DIO_enumSetPinValue+0x36>
     d88:	6f c0       	rjmp	.+222    	; 0xe68 <DIO_enumSetPinValue+0x114>
		{
			//Check on the Required PORT Number
			switch (Copy_u8PORT)
     d8a:	8a 81       	ldd	r24, Y+2	; 0x02
     d8c:	28 2f       	mov	r18, r24
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	38 87       	std	Y+8, r19	; 0x08
     d92:	2f 83       	std	Y+7, r18	; 0x07
     d94:	8f 81       	ldd	r24, Y+7	; 0x07
     d96:	98 85       	ldd	r25, Y+8	; 0x08
     d98:	81 30       	cpi	r24, 0x01	; 1
     d9a:	91 05       	cpc	r25, r1
     d9c:	49 f1       	breq	.+82     	; 0xdf0 <DIO_enumSetPinValue+0x9c>
     d9e:	2f 81       	ldd	r18, Y+7	; 0x07
     da0:	38 85       	ldd	r19, Y+8	; 0x08
     da2:	22 30       	cpi	r18, 0x02	; 2
     da4:	31 05       	cpc	r19, r1
     da6:	2c f4       	brge	.+10     	; 0xdb2 <DIO_enumSetPinValue+0x5e>
     da8:	8f 81       	ldd	r24, Y+7	; 0x07
     daa:	98 85       	ldd	r25, Y+8	; 0x08
     dac:	00 97       	sbiw	r24, 0x00	; 0
     dae:	61 f0       	breq	.+24     	; 0xdc8 <DIO_enumSetPinValue+0x74>
     db0:	d6 c0       	rjmp	.+428    	; 0xf5e <DIO_enumSetPinValue+0x20a>
     db2:	2f 81       	ldd	r18, Y+7	; 0x07
     db4:	38 85       	ldd	r19, Y+8	; 0x08
     db6:	22 30       	cpi	r18, 0x02	; 2
     db8:	31 05       	cpc	r19, r1
     dba:	71 f1       	breq	.+92     	; 0xe18 <DIO_enumSetPinValue+0xc4>
     dbc:	8f 81       	ldd	r24, Y+7	; 0x07
     dbe:	98 85       	ldd	r25, Y+8	; 0x08
     dc0:	83 30       	cpi	r24, 0x03	; 3
     dc2:	91 05       	cpc	r25, r1
     dc4:	e9 f1       	breq	.+122    	; 0xe40 <DIO_enumSetPinValue+0xec>
     dc6:	cb c0       	rjmp	.+406    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			{
			case DIO_PORTA : SET_BIT(PORTA,Copy_u8PIN);break;
     dc8:	ab e3       	ldi	r26, 0x3B	; 59
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	eb e3       	ldi	r30, 0x3B	; 59
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 81       	ld	r24, Z
     dd2:	48 2f       	mov	r20, r24
     dd4:	8b 81       	ldd	r24, Y+3	; 0x03
     dd6:	28 2f       	mov	r18, r24
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	81 e0       	ldi	r24, 0x01	; 1
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	02 2e       	mov	r0, r18
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <DIO_enumSetPinValue+0x92>
     de2:	88 0f       	add	r24, r24
     de4:	99 1f       	adc	r25, r25
     de6:	0a 94       	dec	r0
     de8:	e2 f7       	brpl	.-8      	; 0xde2 <DIO_enumSetPinValue+0x8e>
     dea:	84 2b       	or	r24, r20
     dec:	8c 93       	st	X, r24
     dee:	b7 c0       	rjmp	.+366    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			case DIO_PORTB : SET_BIT(PORTB,Copy_u8PIN);break;
     df0:	a8 e3       	ldi	r26, 0x38	; 56
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e8 e3       	ldi	r30, 0x38	; 56
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	48 2f       	mov	r20, r24
     dfc:	8b 81       	ldd	r24, Y+3	; 0x03
     dfe:	28 2f       	mov	r18, r24
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	02 2e       	mov	r0, r18
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <DIO_enumSetPinValue+0xba>
     e0a:	88 0f       	add	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	0a 94       	dec	r0
     e10:	e2 f7       	brpl	.-8      	; 0xe0a <DIO_enumSetPinValue+0xb6>
     e12:	84 2b       	or	r24, r20
     e14:	8c 93       	st	X, r24
     e16:	a3 c0       	rjmp	.+326    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			case DIO_PORTC : SET_BIT(PORTC,Copy_u8PIN);break;
     e18:	a5 e3       	ldi	r26, 0x35	; 53
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e5 e3       	ldi	r30, 0x35	; 53
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	48 2f       	mov	r20, r24
     e24:	8b 81       	ldd	r24, Y+3	; 0x03
     e26:	28 2f       	mov	r18, r24
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 2e       	mov	r0, r18
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <DIO_enumSetPinValue+0xe2>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	0a 94       	dec	r0
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <DIO_enumSetPinValue+0xde>
     e3a:	84 2b       	or	r24, r20
     e3c:	8c 93       	st	X, r24
     e3e:	8f c0       	rjmp	.+286    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			case DIO_PORTD : SET_BIT(PORTD,Copy_u8PIN);break;		
     e40:	a2 e3       	ldi	r26, 0x32	; 50
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e2 e3       	ldi	r30, 0x32	; 50
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	48 2f       	mov	r20, r24
     e4c:	8b 81       	ldd	r24, Y+3	; 0x03
     e4e:	28 2f       	mov	r18, r24
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	02 2e       	mov	r0, r18
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <DIO_enumSetPinValue+0x10a>
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	0a 94       	dec	r0
     e60:	e2 f7       	brpl	.-8      	; 0xe5a <DIO_enumSetPinValue+0x106>
     e62:	84 2b       	or	r24, r20
     e64:	8c 93       	st	X, r24
     e66:	7b c0       	rjmp	.+246    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			}
		}
		//Check on the Pin Option Value
		else if (Copy_u8Value == DIO_PIN_LOW)
     e68:	8c 81       	ldd	r24, Y+4	; 0x04
     e6a:	88 23       	and	r24, r24
     e6c:	09 f0       	breq	.+2      	; 0xe70 <DIO_enumSetPinValue+0x11c>
     e6e:	74 c0       	rjmp	.+232    	; 0xf58 <DIO_enumSetPinValue+0x204>
		{
			//Check on the Required PORT Number
			switch (Copy_u8PORT)
     e70:	8a 81       	ldd	r24, Y+2	; 0x02
     e72:	28 2f       	mov	r18, r24
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	3e 83       	std	Y+6, r19	; 0x06
     e78:	2d 83       	std	Y+5, r18	; 0x05
     e7a:	8d 81       	ldd	r24, Y+5	; 0x05
     e7c:	9e 81       	ldd	r25, Y+6	; 0x06
     e7e:	81 30       	cpi	r24, 0x01	; 1
     e80:	91 05       	cpc	r25, r1
     e82:	59 f1       	breq	.+86     	; 0xeda <DIO_enumSetPinValue+0x186>
     e84:	2d 81       	ldd	r18, Y+5	; 0x05
     e86:	3e 81       	ldd	r19, Y+6	; 0x06
     e88:	22 30       	cpi	r18, 0x02	; 2
     e8a:	31 05       	cpc	r19, r1
     e8c:	2c f4       	brge	.+10     	; 0xe98 <DIO_enumSetPinValue+0x144>
     e8e:	8d 81       	ldd	r24, Y+5	; 0x05
     e90:	9e 81       	ldd	r25, Y+6	; 0x06
     e92:	00 97       	sbiw	r24, 0x00	; 0
     e94:	69 f0       	breq	.+26     	; 0xeb0 <DIO_enumSetPinValue+0x15c>
     e96:	63 c0       	rjmp	.+198    	; 0xf5e <DIO_enumSetPinValue+0x20a>
     e98:	2d 81       	ldd	r18, Y+5	; 0x05
     e9a:	3e 81       	ldd	r19, Y+6	; 0x06
     e9c:	22 30       	cpi	r18, 0x02	; 2
     e9e:	31 05       	cpc	r19, r1
     ea0:	89 f1       	breq	.+98     	; 0xf04 <DIO_enumSetPinValue+0x1b0>
     ea2:	8d 81       	ldd	r24, Y+5	; 0x05
     ea4:	9e 81       	ldd	r25, Y+6	; 0x06
     ea6:	83 30       	cpi	r24, 0x03	; 3
     ea8:	91 05       	cpc	r25, r1
     eaa:	09 f4       	brne	.+2      	; 0xeae <DIO_enumSetPinValue+0x15a>
     eac:	40 c0       	rjmp	.+128    	; 0xf2e <DIO_enumSetPinValue+0x1da>
     eae:	57 c0       	rjmp	.+174    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			{
			case DIO_PORTA : CLR_BIT(PORTA,Copy_u8PIN);break;
     eb0:	ab e3       	ldi	r26, 0x3B	; 59
     eb2:	b0 e0       	ldi	r27, 0x00	; 0
     eb4:	eb e3       	ldi	r30, 0x3B	; 59
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	48 2f       	mov	r20, r24
     ebc:	8b 81       	ldd	r24, Y+3	; 0x03
     ebe:	28 2f       	mov	r18, r24
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	02 2e       	mov	r0, r18
     ec8:	02 c0       	rjmp	.+4      	; 0xece <DIO_enumSetPinValue+0x17a>
     eca:	88 0f       	add	r24, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	0a 94       	dec	r0
     ed0:	e2 f7       	brpl	.-8      	; 0xeca <DIO_enumSetPinValue+0x176>
     ed2:	80 95       	com	r24
     ed4:	84 23       	and	r24, r20
     ed6:	8c 93       	st	X, r24
     ed8:	42 c0       	rjmp	.+132    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			case DIO_PORTB : CLR_BIT(PORTB,Copy_u8PIN);break;
     eda:	a8 e3       	ldi	r26, 0x38	; 56
     edc:	b0 e0       	ldi	r27, 0x00	; 0
     ede:	e8 e3       	ldi	r30, 0x38	; 56
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	80 81       	ld	r24, Z
     ee4:	48 2f       	mov	r20, r24
     ee6:	8b 81       	ldd	r24, Y+3	; 0x03
     ee8:	28 2f       	mov	r18, r24
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	02 2e       	mov	r0, r18
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <DIO_enumSetPinValue+0x1a4>
     ef4:	88 0f       	add	r24, r24
     ef6:	99 1f       	adc	r25, r25
     ef8:	0a 94       	dec	r0
     efa:	e2 f7       	brpl	.-8      	; 0xef4 <DIO_enumSetPinValue+0x1a0>
     efc:	80 95       	com	r24
     efe:	84 23       	and	r24, r20
     f00:	8c 93       	st	X, r24
     f02:	2d c0       	rjmp	.+90     	; 0xf5e <DIO_enumSetPinValue+0x20a>
			case DIO_PORTC : CLR_BIT(PORTC,Copy_u8PIN);break;
     f04:	a5 e3       	ldi	r26, 0x35	; 53
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e5 e3       	ldi	r30, 0x35	; 53
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	80 81       	ld	r24, Z
     f0e:	48 2f       	mov	r20, r24
     f10:	8b 81       	ldd	r24, Y+3	; 0x03
     f12:	28 2f       	mov	r18, r24
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	02 2e       	mov	r0, r18
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <DIO_enumSetPinValue+0x1ce>
     f1e:	88 0f       	add	r24, r24
     f20:	99 1f       	adc	r25, r25
     f22:	0a 94       	dec	r0
     f24:	e2 f7       	brpl	.-8      	; 0xf1e <DIO_enumSetPinValue+0x1ca>
     f26:	80 95       	com	r24
     f28:	84 23       	and	r24, r20
     f2a:	8c 93       	st	X, r24
     f2c:	18 c0       	rjmp	.+48     	; 0xf5e <DIO_enumSetPinValue+0x20a>
			case DIO_PORTD : CLR_BIT(PORTD,Copy_u8PIN);break;		
     f2e:	a2 e3       	ldi	r26, 0x32	; 50
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	e2 e3       	ldi	r30, 0x32	; 50
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	80 81       	ld	r24, Z
     f38:	48 2f       	mov	r20, r24
     f3a:	8b 81       	ldd	r24, Y+3	; 0x03
     f3c:	28 2f       	mov	r18, r24
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	02 2e       	mov	r0, r18
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <DIO_enumSetPinValue+0x1f8>
     f48:	88 0f       	add	r24, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	0a 94       	dec	r0
     f4e:	e2 f7       	brpl	.-8      	; 0xf48 <DIO_enumSetPinValue+0x1f4>
     f50:	80 95       	com	r24
     f52:	84 23       	and	r24, r20
     f54:	8c 93       	st	X, r24
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <DIO_enumSetPinValue+0x20a>
			}
		}
		else
			{
				//in case of error in the Pin ID or PORT ID
				LOC_enumState = DIO_NOK ;
     f58:	19 82       	std	Y+1, r1	; 0x01
     f5a:	01 c0       	rjmp	.+2      	; 0xf5e <DIO_enumSetPinValue+0x20a>
	}

	else
	{
		//in case of error in the Pin ID or PORT ID
		LOC_enumState = DIO_NOK ;
     f5c:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState ;
     f5e:	89 81       	ldd	r24, Y+1	; 0x01

}
     f60:	28 96       	adiw	r28, 0x08	; 8
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	f8 94       	cli
     f66:	de bf       	out	0x3e, r29	; 62
     f68:	0f be       	out	0x3f, r0	; 63
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	cf 91       	pop	r28
     f6e:	df 91       	pop	r29
     f70:	08 95       	ret

00000f72 <DIO_enumGetPinValue>:
  	  => *Copy_PtrData  --> pointer to recieve the pin value
 * return : its status and recieve Pin Value in pointer
 */

DIO_ErrorStatus DIO_enumGetPinValue (u8 Copy_u8PORT, u8 Copy_u8PIN, u8 * Copy_PtrData   )
{
     f72:	df 93       	push	r29
     f74:	cf 93       	push	r28
     f76:	cd b7       	in	r28, 0x3d	; 61
     f78:	de b7       	in	r29, 0x3e	; 62
     f7a:	27 97       	sbiw	r28, 0x07	; 7
     f7c:	0f b6       	in	r0, 0x3f	; 63
     f7e:	f8 94       	cli
     f80:	de bf       	out	0x3e, r29	; 62
     f82:	0f be       	out	0x3f, r0	; 63
     f84:	cd bf       	out	0x3d, r28	; 61
     f86:	8a 83       	std	Y+2, r24	; 0x02
     f88:	6b 83       	std	Y+3, r22	; 0x03
     f8a:	5d 83       	std	Y+5, r21	; 0x05
     f8c:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	89 83       	std	Y+1, r24	; 0x01
    //Make sure that the Port ID and Pin ID are in the valid range
	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
     f92:	8a 81       	ldd	r24, Y+2	; 0x02
     f94:	84 30       	cpi	r24, 0x04	; 4
     f96:	08 f0       	brcs	.+2      	; 0xf9a <DIO_enumGetPinValue+0x28>
     f98:	a2 c0       	rjmp	.+324    	; 0x10de <DIO_enumGetPinValue+0x16c>
     f9a:	8b 81       	ldd	r24, Y+3	; 0x03
     f9c:	88 30       	cpi	r24, 0x08	; 8
     f9e:	08 f0       	brcs	.+2      	; 0xfa2 <DIO_enumGetPinValue+0x30>
     fa0:	9e c0       	rjmp	.+316    	; 0x10de <DIO_enumGetPinValue+0x16c>
	{
		//Check on the Required PORT Number
		switch (Copy_u8PORT)
     fa2:	8a 81       	ldd	r24, Y+2	; 0x02
     fa4:	28 2f       	mov	r18, r24
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	3f 83       	std	Y+7, r19	; 0x07
     faa:	2e 83       	std	Y+6, r18	; 0x06
     fac:	6e 81       	ldd	r22, Y+6	; 0x06
     fae:	7f 81       	ldd	r23, Y+7	; 0x07
     fb0:	61 30       	cpi	r22, 0x01	; 1
     fb2:	71 05       	cpc	r23, r1
     fb4:	b9 f1       	breq	.+110    	; 0x1024 <DIO_enumGetPinValue+0xb2>
     fb6:	8e 81       	ldd	r24, Y+6	; 0x06
     fb8:	9f 81       	ldd	r25, Y+7	; 0x07
     fba:	82 30       	cpi	r24, 0x02	; 2
     fbc:	91 05       	cpc	r25, r1
     fbe:	34 f4       	brge	.+12     	; 0xfcc <DIO_enumGetPinValue+0x5a>
     fc0:	2e 81       	ldd	r18, Y+6	; 0x06
     fc2:	3f 81       	ldd	r19, Y+7	; 0x07
     fc4:	21 15       	cp	r18, r1
     fc6:	31 05       	cpc	r19, r1
     fc8:	71 f0       	breq	.+28     	; 0xfe6 <DIO_enumGetPinValue+0x74>
     fca:	8a c0       	rjmp	.+276    	; 0x10e0 <DIO_enumGetPinValue+0x16e>
     fcc:	6e 81       	ldd	r22, Y+6	; 0x06
     fce:	7f 81       	ldd	r23, Y+7	; 0x07
     fd0:	62 30       	cpi	r22, 0x02	; 2
     fd2:	71 05       	cpc	r23, r1
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <DIO_enumGetPinValue+0x66>
     fd6:	45 c0       	rjmp	.+138    	; 0x1062 <DIO_enumGetPinValue+0xf0>
     fd8:	8e 81       	ldd	r24, Y+6	; 0x06
     fda:	9f 81       	ldd	r25, Y+7	; 0x07
     fdc:	83 30       	cpi	r24, 0x03	; 3
     fde:	91 05       	cpc	r25, r1
     fe0:	09 f4       	brne	.+2      	; 0xfe4 <DIO_enumGetPinValue+0x72>
     fe2:	5e c0       	rjmp	.+188    	; 0x10a0 <DIO_enumGetPinValue+0x12e>
     fe4:	7d c0       	rjmp	.+250    	; 0x10e0 <DIO_enumGetPinValue+0x16e>
	    {
		case DIO_PORTA : * Copy_PtrData=GET_BIT(PINA,Copy_u8PIN);break;
     fe6:	e9 e3       	ldi	r30, 0x39	; 57
     fe8:	f0 e0       	ldi	r31, 0x00	; 0
     fea:	80 81       	ld	r24, Z
     fec:	48 2f       	mov	r20, r24
     fee:	8b 81       	ldd	r24, Y+3	; 0x03
     ff0:	28 2f       	mov	r18, r24
     ff2:	30 e0       	ldi	r19, 0x00	; 0
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	bc 01       	movw	r22, r24
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <DIO_enumGetPinValue+0x8e>
     ffc:	66 0f       	add	r22, r22
     ffe:	77 1f       	adc	r23, r23
    1000:	2a 95       	dec	r18
    1002:	e2 f7       	brpl	.-8      	; 0xffc <DIO_enumGetPinValue+0x8a>
    1004:	9b 01       	movw	r18, r22
    1006:	8b 81       	ldd	r24, Y+3	; 0x03
    1008:	88 2f       	mov	r24, r24
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	b9 01       	movw	r22, r18
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <DIO_enumGetPinValue+0xa2>
    1010:	75 95       	asr	r23
    1012:	67 95       	ror	r22
    1014:	8a 95       	dec	r24
    1016:	e2 f7       	brpl	.-8      	; 0x1010 <DIO_enumGetPinValue+0x9e>
    1018:	cb 01       	movw	r24, r22
    101a:	84 23       	and	r24, r20
    101c:	ec 81       	ldd	r30, Y+4	; 0x04
    101e:	fd 81       	ldd	r31, Y+5	; 0x05
    1020:	80 83       	st	Z, r24
    1022:	5e c0       	rjmp	.+188    	; 0x10e0 <DIO_enumGetPinValue+0x16e>
		case DIO_PORTB : * Copy_PtrData=GET_BIT(PINB,Copy_u8PIN);break;
    1024:	e6 e3       	ldi	r30, 0x36	; 54
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	80 81       	ld	r24, Z
    102a:	48 2f       	mov	r20, r24
    102c:	8b 81       	ldd	r24, Y+3	; 0x03
    102e:	28 2f       	mov	r18, r24
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	81 e0       	ldi	r24, 0x01	; 1
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	bc 01       	movw	r22, r24
    1038:	02 c0       	rjmp	.+4      	; 0x103e <DIO_enumGetPinValue+0xcc>
    103a:	66 0f       	add	r22, r22
    103c:	77 1f       	adc	r23, r23
    103e:	2a 95       	dec	r18
    1040:	e2 f7       	brpl	.-8      	; 0x103a <DIO_enumGetPinValue+0xc8>
    1042:	9b 01       	movw	r18, r22
    1044:	8b 81       	ldd	r24, Y+3	; 0x03
    1046:	88 2f       	mov	r24, r24
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	b9 01       	movw	r22, r18
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <DIO_enumGetPinValue+0xe0>
    104e:	75 95       	asr	r23
    1050:	67 95       	ror	r22
    1052:	8a 95       	dec	r24
    1054:	e2 f7       	brpl	.-8      	; 0x104e <DIO_enumGetPinValue+0xdc>
    1056:	cb 01       	movw	r24, r22
    1058:	84 23       	and	r24, r20
    105a:	ec 81       	ldd	r30, Y+4	; 0x04
    105c:	fd 81       	ldd	r31, Y+5	; 0x05
    105e:	80 83       	st	Z, r24
    1060:	3f c0       	rjmp	.+126    	; 0x10e0 <DIO_enumGetPinValue+0x16e>
		case DIO_PORTC : * Copy_PtrData=GET_BIT(PINC,Copy_u8PIN);break;
    1062:	e3 e3       	ldi	r30, 0x33	; 51
    1064:	f0 e0       	ldi	r31, 0x00	; 0
    1066:	80 81       	ld	r24, Z
    1068:	48 2f       	mov	r20, r24
    106a:	8b 81       	ldd	r24, Y+3	; 0x03
    106c:	28 2f       	mov	r18, r24
    106e:	30 e0       	ldi	r19, 0x00	; 0
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	bc 01       	movw	r22, r24
    1076:	02 c0       	rjmp	.+4      	; 0x107c <DIO_enumGetPinValue+0x10a>
    1078:	66 0f       	add	r22, r22
    107a:	77 1f       	adc	r23, r23
    107c:	2a 95       	dec	r18
    107e:	e2 f7       	brpl	.-8      	; 0x1078 <DIO_enumGetPinValue+0x106>
    1080:	9b 01       	movw	r18, r22
    1082:	8b 81       	ldd	r24, Y+3	; 0x03
    1084:	88 2f       	mov	r24, r24
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	b9 01       	movw	r22, r18
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <DIO_enumGetPinValue+0x11e>
    108c:	75 95       	asr	r23
    108e:	67 95       	ror	r22
    1090:	8a 95       	dec	r24
    1092:	e2 f7       	brpl	.-8      	; 0x108c <DIO_enumGetPinValue+0x11a>
    1094:	cb 01       	movw	r24, r22
    1096:	84 23       	and	r24, r20
    1098:	ec 81       	ldd	r30, Y+4	; 0x04
    109a:	fd 81       	ldd	r31, Y+5	; 0x05
    109c:	80 83       	st	Z, r24
    109e:	20 c0       	rjmp	.+64     	; 0x10e0 <DIO_enumGetPinValue+0x16e>
		case DIO_PORTD : * Copy_PtrData=GET_BIT(PIND,Copy_u8PIN);break;		
    10a0:	e0 e3       	ldi	r30, 0x30	; 48
    10a2:	f0 e0       	ldi	r31, 0x00	; 0
    10a4:	80 81       	ld	r24, Z
    10a6:	48 2f       	mov	r20, r24
    10a8:	8b 81       	ldd	r24, Y+3	; 0x03
    10aa:	28 2f       	mov	r18, r24
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	bc 01       	movw	r22, r24
    10b4:	02 c0       	rjmp	.+4      	; 0x10ba <DIO_enumGetPinValue+0x148>
    10b6:	66 0f       	add	r22, r22
    10b8:	77 1f       	adc	r23, r23
    10ba:	2a 95       	dec	r18
    10bc:	e2 f7       	brpl	.-8      	; 0x10b6 <DIO_enumGetPinValue+0x144>
    10be:	9b 01       	movw	r18, r22
    10c0:	8b 81       	ldd	r24, Y+3	; 0x03
    10c2:	88 2f       	mov	r24, r24
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	b9 01       	movw	r22, r18
    10c8:	02 c0       	rjmp	.+4      	; 0x10ce <DIO_enumGetPinValue+0x15c>
    10ca:	75 95       	asr	r23
    10cc:	67 95       	ror	r22
    10ce:	8a 95       	dec	r24
    10d0:	e2 f7       	brpl	.-8      	; 0x10ca <DIO_enumGetPinValue+0x158>
    10d2:	cb 01       	movw	r24, r22
    10d4:	84 23       	and	r24, r20
    10d6:	ec 81       	ldd	r30, Y+4	; 0x04
    10d8:	fd 81       	ldd	r31, Y+5	; 0x05
    10da:	80 83       	st	Z, r24
    10dc:	01 c0       	rjmp	.+2      	; 0x10e0 <DIO_enumGetPinValue+0x16e>
		}
	}
	else
	{
		//in case of error in the Pin ID or PORT ID
		LOC_enumState = DIO_NOK ;
    10de:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState;	
    10e0:	89 81       	ldd	r24, Y+1	; 0x01
}
    10e2:	27 96       	adiw	r28, 0x07	; 7
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	f8 94       	cli
    10e8:	de bf       	out	0x3e, r29	; 62
    10ea:	0f be       	out	0x3f, r0	; 63
    10ec:	cd bf       	out	0x3d, r28	; 61
    10ee:	cf 91       	pop	r28
    10f0:	df 91       	pop	r29
    10f2:	08 95       	ret

000010f4 <DIO_enumTogglePinValue>:
  	  =>Copy_u8PORT --> Port Name [ DIO_PORTA ,	DIO_PORTB , DIO_PORTC , DIO_PORTD ]
  	  =>Copy_u8PIN  --> Pin Number [ DIO_PIN0 , DIO_PIN1 , DIO_PIN2 , DIO_PIN3 , DIO_PIN4 , DIO_PIN5 , DIO_PIN6 , DIO_PIN7 ]
 * return : its status
 */
DIO_ErrorStatus DIO_enumTogglePinValue  ( u8 Copy_u8PORT, u8 Copy_u8PIN )
{
    10f4:	df 93       	push	r29
    10f6:	cf 93       	push	r28
    10f8:	00 d0       	rcall	.+0      	; 0x10fa <DIO_enumTogglePinValue+0x6>
    10fa:	00 d0       	rcall	.+0      	; 0x10fc <DIO_enumTogglePinValue+0x8>
    10fc:	0f 92       	push	r0
    10fe:	cd b7       	in	r28, 0x3d	; 61
    1100:	de b7       	in	r29, 0x3e	; 62
    1102:	8a 83       	std	Y+2, r24	; 0x02
    1104:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	89 83       	std	Y+1, r24	; 0x01

	//Make sure that the Port ID and Pin ID are in the valid range
	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
    110a:	8a 81       	ldd	r24, Y+2	; 0x02
    110c:	84 30       	cpi	r24, 0x04	; 4
    110e:	08 f0       	brcs	.+2      	; 0x1112 <DIO_enumTogglePinValue+0x1e>
    1110:	73 c0       	rjmp	.+230    	; 0x11f8 <DIO_enumTogglePinValue+0x104>
    1112:	8b 81       	ldd	r24, Y+3	; 0x03
    1114:	88 30       	cpi	r24, 0x08	; 8
    1116:	08 f0       	brcs	.+2      	; 0x111a <DIO_enumTogglePinValue+0x26>
    1118:	6f c0       	rjmp	.+222    	; 0x11f8 <DIO_enumTogglePinValue+0x104>
	{
		//Check on the Required PORT Number
		switch (Copy_u8PORT)
    111a:	8a 81       	ldd	r24, Y+2	; 0x02
    111c:	28 2f       	mov	r18, r24
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	3d 83       	std	Y+5, r19	; 0x05
    1122:	2c 83       	std	Y+4, r18	; 0x04
    1124:	8c 81       	ldd	r24, Y+4	; 0x04
    1126:	9d 81       	ldd	r25, Y+5	; 0x05
    1128:	81 30       	cpi	r24, 0x01	; 1
    112a:	91 05       	cpc	r25, r1
    112c:	49 f1       	breq	.+82     	; 0x1180 <DIO_enumTogglePinValue+0x8c>
    112e:	2c 81       	ldd	r18, Y+4	; 0x04
    1130:	3d 81       	ldd	r19, Y+5	; 0x05
    1132:	22 30       	cpi	r18, 0x02	; 2
    1134:	31 05       	cpc	r19, r1
    1136:	2c f4       	brge	.+10     	; 0x1142 <DIO_enumTogglePinValue+0x4e>
    1138:	8c 81       	ldd	r24, Y+4	; 0x04
    113a:	9d 81       	ldd	r25, Y+5	; 0x05
    113c:	00 97       	sbiw	r24, 0x00	; 0
    113e:	61 f0       	breq	.+24     	; 0x1158 <DIO_enumTogglePinValue+0x64>
    1140:	5c c0       	rjmp	.+184    	; 0x11fa <DIO_enumTogglePinValue+0x106>
    1142:	2c 81       	ldd	r18, Y+4	; 0x04
    1144:	3d 81       	ldd	r19, Y+5	; 0x05
    1146:	22 30       	cpi	r18, 0x02	; 2
    1148:	31 05       	cpc	r19, r1
    114a:	71 f1       	breq	.+92     	; 0x11a8 <DIO_enumTogglePinValue+0xb4>
    114c:	8c 81       	ldd	r24, Y+4	; 0x04
    114e:	9d 81       	ldd	r25, Y+5	; 0x05
    1150:	83 30       	cpi	r24, 0x03	; 3
    1152:	91 05       	cpc	r25, r1
    1154:	e9 f1       	breq	.+122    	; 0x11d0 <DIO_enumTogglePinValue+0xdc>
    1156:	51 c0       	rjmp	.+162    	; 0x11fa <DIO_enumTogglePinValue+0x106>
		{
		case DIO_PORTA : TOG_BIT(PORTA,Copy_u8PIN);
    1158:	ab e3       	ldi	r26, 0x3B	; 59
    115a:	b0 e0       	ldi	r27, 0x00	; 0
    115c:	eb e3       	ldi	r30, 0x3B	; 59
    115e:	f0 e0       	ldi	r31, 0x00	; 0
    1160:	80 81       	ld	r24, Z
    1162:	48 2f       	mov	r20, r24
    1164:	8b 81       	ldd	r24, Y+3	; 0x03
    1166:	28 2f       	mov	r18, r24
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	02 2e       	mov	r0, r18
    1170:	02 c0       	rjmp	.+4      	; 0x1176 <DIO_enumTogglePinValue+0x82>
    1172:	88 0f       	add	r24, r24
    1174:	99 1f       	adc	r25, r25
    1176:	0a 94       	dec	r0
    1178:	e2 f7       	brpl	.-8      	; 0x1172 <DIO_enumTogglePinValue+0x7e>
    117a:	84 27       	eor	r24, r20
    117c:	8c 93       	st	X, r24
    117e:	3d c0       	rjmp	.+122    	; 0x11fa <DIO_enumTogglePinValue+0x106>
		break ;
		case DIO_PORTB : TOG_BIT(PORTB,Copy_u8PIN);
    1180:	a8 e3       	ldi	r26, 0x38	; 56
    1182:	b0 e0       	ldi	r27, 0x00	; 0
    1184:	e8 e3       	ldi	r30, 0x38	; 56
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	80 81       	ld	r24, Z
    118a:	48 2f       	mov	r20, r24
    118c:	8b 81       	ldd	r24, Y+3	; 0x03
    118e:	28 2f       	mov	r18, r24
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	81 e0       	ldi	r24, 0x01	; 1
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	02 2e       	mov	r0, r18
    1198:	02 c0       	rjmp	.+4      	; 0x119e <DIO_enumTogglePinValue+0xaa>
    119a:	88 0f       	add	r24, r24
    119c:	99 1f       	adc	r25, r25
    119e:	0a 94       	dec	r0
    11a0:	e2 f7       	brpl	.-8      	; 0x119a <DIO_enumTogglePinValue+0xa6>
    11a2:	84 27       	eor	r24, r20
    11a4:	8c 93       	st	X, r24
    11a6:	29 c0       	rjmp	.+82     	; 0x11fa <DIO_enumTogglePinValue+0x106>
		break ;
		case DIO_PORTC : TOG_BIT(PORTC,Copy_u8PIN);
    11a8:	a5 e3       	ldi	r26, 0x35	; 53
    11aa:	b0 e0       	ldi	r27, 0x00	; 0
    11ac:	e5 e3       	ldi	r30, 0x35	; 53
    11ae:	f0 e0       	ldi	r31, 0x00	; 0
    11b0:	80 81       	ld	r24, Z
    11b2:	48 2f       	mov	r20, r24
    11b4:	8b 81       	ldd	r24, Y+3	; 0x03
    11b6:	28 2f       	mov	r18, r24
    11b8:	30 e0       	ldi	r19, 0x00	; 0
    11ba:	81 e0       	ldi	r24, 0x01	; 1
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	02 2e       	mov	r0, r18
    11c0:	02 c0       	rjmp	.+4      	; 0x11c6 <DIO_enumTogglePinValue+0xd2>
    11c2:	88 0f       	add	r24, r24
    11c4:	99 1f       	adc	r25, r25
    11c6:	0a 94       	dec	r0
    11c8:	e2 f7       	brpl	.-8      	; 0x11c2 <DIO_enumTogglePinValue+0xce>
    11ca:	84 27       	eor	r24, r20
    11cc:	8c 93       	st	X, r24
    11ce:	15 c0       	rjmp	.+42     	; 0x11fa <DIO_enumTogglePinValue+0x106>
		break ;
		case DIO_PORTD : TOG_BIT(PORTD,Copy_u8PIN);
    11d0:	a2 e3       	ldi	r26, 0x32	; 50
    11d2:	b0 e0       	ldi	r27, 0x00	; 0
    11d4:	e2 e3       	ldi	r30, 0x32	; 50
    11d6:	f0 e0       	ldi	r31, 0x00	; 0
    11d8:	80 81       	ld	r24, Z
    11da:	48 2f       	mov	r20, r24
    11dc:	8b 81       	ldd	r24, Y+3	; 0x03
    11de:	28 2f       	mov	r18, r24
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	81 e0       	ldi	r24, 0x01	; 1
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	02 2e       	mov	r0, r18
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <DIO_enumTogglePinValue+0xfa>
    11ea:	88 0f       	add	r24, r24
    11ec:	99 1f       	adc	r25, r25
    11ee:	0a 94       	dec	r0
    11f0:	e2 f7       	brpl	.-8      	; 0x11ea <DIO_enumTogglePinValue+0xf6>
    11f2:	84 27       	eor	r24, r20
    11f4:	8c 93       	st	X, r24
    11f6:	01 c0       	rjmp	.+2      	; 0x11fa <DIO_enumTogglePinValue+0x106>

	}
	else
	{
		//in case of error in the Pin ID or PORT ID 
		LOC_enumState = DIO_NOK ;
    11f8:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState;
    11fa:	89 81       	ldd	r24, Y+1	; 0x01
}
    11fc:	0f 90       	pop	r0
    11fe:	0f 90       	pop	r0
    1200:	0f 90       	pop	r0
    1202:	0f 90       	pop	r0
    1204:	0f 90       	pop	r0
    1206:	cf 91       	pop	r28
    1208:	df 91       	pop	r29
    120a:	08 95       	ret

0000120c <DIO_enumSetPortDirection>:
 	  =>Copy_u8PORT --> Port Name [ DIO_PORTA , DIO_PORTB , DIO_PORTC , DIO_PORTD ]
 	  =>Copy_u8Direction  --> Port direction [ DIO_PORT_OUTPUT , DIO_PORT_INPUT ]
 * return :  its status
 */
DIO_ErrorStatus DIO_enumSetPortDirection  (u8 Copy_u8PORT , u8 Copy_u8Direction ) 
{
    120c:	df 93       	push	r29
    120e:	cf 93       	push	r28
    1210:	00 d0       	rcall	.+0      	; 0x1212 <DIO_enumSetPortDirection+0x6>
    1212:	00 d0       	rcall	.+0      	; 0x1214 <DIO_enumSetPortDirection+0x8>
    1214:	0f 92       	push	r0
    1216:	cd b7       	in	r28, 0x3d	; 61
    1218:	de b7       	in	r29, 0x3e	; 62
    121a:	8a 83       	std	Y+2, r24	; 0x02
    121c:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    121e:	81 e0       	ldi	r24, 0x01	; 1
    1220:	89 83       	std	Y+1, r24	; 0x01
    
	//Make sure that the Port ID is in the valid range
	if ( (Copy_u8PORT <= DIO_PORTD) )
    1222:	8a 81       	ldd	r24, Y+2	; 0x02
    1224:	84 30       	cpi	r24, 0x04	; 4
    1226:	a8 f5       	brcc	.+106    	; 0x1292 <DIO_enumSetPortDirection+0x86>
	{
		//Check on the Required PORT Number 
		switch (Copy_u8PORT)
    1228:	8a 81       	ldd	r24, Y+2	; 0x02
    122a:	28 2f       	mov	r18, r24
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	3d 83       	std	Y+5, r19	; 0x05
    1230:	2c 83       	std	Y+4, r18	; 0x04
    1232:	8c 81       	ldd	r24, Y+4	; 0x04
    1234:	9d 81       	ldd	r25, Y+5	; 0x05
    1236:	81 30       	cpi	r24, 0x01	; 1
    1238:	91 05       	cpc	r25, r1
    123a:	d1 f0       	breq	.+52     	; 0x1270 <DIO_enumSetPortDirection+0x64>
    123c:	2c 81       	ldd	r18, Y+4	; 0x04
    123e:	3d 81       	ldd	r19, Y+5	; 0x05
    1240:	22 30       	cpi	r18, 0x02	; 2
    1242:	31 05       	cpc	r19, r1
    1244:	2c f4       	brge	.+10     	; 0x1250 <DIO_enumSetPortDirection+0x44>
    1246:	8c 81       	ldd	r24, Y+4	; 0x04
    1248:	9d 81       	ldd	r25, Y+5	; 0x05
    124a:	00 97       	sbiw	r24, 0x00	; 0
    124c:	61 f0       	breq	.+24     	; 0x1266 <DIO_enumSetPortDirection+0x5a>
    124e:	1f c0       	rjmp	.+62     	; 0x128e <DIO_enumSetPortDirection+0x82>
    1250:	2c 81       	ldd	r18, Y+4	; 0x04
    1252:	3d 81       	ldd	r19, Y+5	; 0x05
    1254:	22 30       	cpi	r18, 0x02	; 2
    1256:	31 05       	cpc	r19, r1
    1258:	81 f0       	breq	.+32     	; 0x127a <DIO_enumSetPortDirection+0x6e>
    125a:	8c 81       	ldd	r24, Y+4	; 0x04
    125c:	9d 81       	ldd	r25, Y+5	; 0x05
    125e:	83 30       	cpi	r24, 0x03	; 3
    1260:	91 05       	cpc	r25, r1
    1262:	81 f0       	breq	.+32     	; 0x1284 <DIO_enumSetPortDirection+0x78>
    1264:	14 c0       	rjmp	.+40     	; 0x128e <DIO_enumSetPortDirection+0x82>
		{
		case DIO_PORTA: DDRA = Copy_u8Direction; break;
    1266:	ea e3       	ldi	r30, 0x3A	; 58
    1268:	f0 e0       	ldi	r31, 0x00	; 0
    126a:	8b 81       	ldd	r24, Y+3	; 0x03
    126c:	80 83       	st	Z, r24
    126e:	12 c0       	rjmp	.+36     	; 0x1294 <DIO_enumSetPortDirection+0x88>
		case DIO_PORTB: DDRB = Copy_u8Direction; break;
    1270:	e7 e3       	ldi	r30, 0x37	; 55
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	8b 81       	ldd	r24, Y+3	; 0x03
    1276:	80 83       	st	Z, r24
    1278:	0d c0       	rjmp	.+26     	; 0x1294 <DIO_enumSetPortDirection+0x88>
		case DIO_PORTC: DDRC = Copy_u8Direction; break;
    127a:	e4 e3       	ldi	r30, 0x34	; 52
    127c:	f0 e0       	ldi	r31, 0x00	; 0
    127e:	8b 81       	ldd	r24, Y+3	; 0x03
    1280:	80 83       	st	Z, r24
    1282:	08 c0       	rjmp	.+16     	; 0x1294 <DIO_enumSetPortDirection+0x88>
		case DIO_PORTD: DDRD = Copy_u8Direction; break;
    1284:	e1 e3       	ldi	r30, 0x31	; 49
    1286:	f0 e0       	ldi	r31, 0x00	; 0
    1288:	8b 81       	ldd	r24, Y+3	; 0x03
    128a:	80 83       	st	Z, r24
    128c:	03 c0       	rjmp	.+6      	; 0x1294 <DIO_enumSetPortDirection+0x88>
		default       : LOC_enumState = DIO_NOK; break;
    128e:	19 82       	std	Y+1, r1	; 0x01
    1290:	01 c0       	rjmp	.+2      	; 0x1294 <DIO_enumSetPortDirection+0x88>
		}	
	}
	else
	{
		//in case of error in the PORT ID 
		LOC_enumState = DIO_NOK;
    1292:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState ;
    1294:	89 81       	ldd	r24, Y+1	; 0x01
}
    1296:	0f 90       	pop	r0
    1298:	0f 90       	pop	r0
    129a:	0f 90       	pop	r0
    129c:	0f 90       	pop	r0
    129e:	0f 90       	pop	r0
    12a0:	cf 91       	pop	r28
    12a2:	df 91       	pop	r29
    12a4:	08 95       	ret

000012a6 <DIO_enumSetPortValue>:
  	  =>Copy_u8PORT --> Port Name [ DIO_PORTA , DIO_PORTB , DIO_PORTC , DIO_PORTD ]
 	  =>Copy_u8Value  --> The Value  [DIO_PORT_HIGH , DIO_PORT_LOW , Another Value]
 * return : its status
 */
DIO_ErrorStatus DIO_enumSetPortValue  (u8 Copy_u8PORT , u8 Copy_u8Value )
{
    12a6:	df 93       	push	r29
    12a8:	cf 93       	push	r28
    12aa:	00 d0       	rcall	.+0      	; 0x12ac <DIO_enumSetPortValue+0x6>
    12ac:	00 d0       	rcall	.+0      	; 0x12ae <DIO_enumSetPortValue+0x8>
    12ae:	0f 92       	push	r0
    12b0:	cd b7       	in	r28, 0x3d	; 61
    12b2:	de b7       	in	r29, 0x3e	; 62
    12b4:	8a 83       	std	Y+2, r24	; 0x02
    12b6:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	89 83       	std	Y+1, r24	; 0x01
    
	//Make sure that the Port ID is in the valid range and the Value is Valid
	if ( (Copy_u8PORT <= DIO_PORTD) && ( (Copy_u8Value<=255) || (Copy_u8Value==DIO_PORT_LOW) || (Copy_u8Value==DIO_PORT_HIGH) ) )
    12bc:	8a 81       	ldd	r24, Y+2	; 0x02
    12be:	84 30       	cpi	r24, 0x04	; 4
    12c0:	a8 f5       	brcc	.+106    	; 0x132c <DIO_enumSetPortValue+0x86>
	{
		//Check on the Required PORT Number 
		switch (Copy_u8PORT)
    12c2:	8a 81       	ldd	r24, Y+2	; 0x02
    12c4:	28 2f       	mov	r18, r24
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	3d 83       	std	Y+5, r19	; 0x05
    12ca:	2c 83       	std	Y+4, r18	; 0x04
    12cc:	8c 81       	ldd	r24, Y+4	; 0x04
    12ce:	9d 81       	ldd	r25, Y+5	; 0x05
    12d0:	81 30       	cpi	r24, 0x01	; 1
    12d2:	91 05       	cpc	r25, r1
    12d4:	d1 f0       	breq	.+52     	; 0x130a <DIO_enumSetPortValue+0x64>
    12d6:	2c 81       	ldd	r18, Y+4	; 0x04
    12d8:	3d 81       	ldd	r19, Y+5	; 0x05
    12da:	22 30       	cpi	r18, 0x02	; 2
    12dc:	31 05       	cpc	r19, r1
    12de:	2c f4       	brge	.+10     	; 0x12ea <DIO_enumSetPortValue+0x44>
    12e0:	8c 81       	ldd	r24, Y+4	; 0x04
    12e2:	9d 81       	ldd	r25, Y+5	; 0x05
    12e4:	00 97       	sbiw	r24, 0x00	; 0
    12e6:	61 f0       	breq	.+24     	; 0x1300 <DIO_enumSetPortValue+0x5a>
    12e8:	1f c0       	rjmp	.+62     	; 0x1328 <DIO_enumSetPortValue+0x82>
    12ea:	2c 81       	ldd	r18, Y+4	; 0x04
    12ec:	3d 81       	ldd	r19, Y+5	; 0x05
    12ee:	22 30       	cpi	r18, 0x02	; 2
    12f0:	31 05       	cpc	r19, r1
    12f2:	81 f0       	breq	.+32     	; 0x1314 <DIO_enumSetPortValue+0x6e>
    12f4:	8c 81       	ldd	r24, Y+4	; 0x04
    12f6:	9d 81       	ldd	r25, Y+5	; 0x05
    12f8:	83 30       	cpi	r24, 0x03	; 3
    12fa:	91 05       	cpc	r25, r1
    12fc:	81 f0       	breq	.+32     	; 0x131e <DIO_enumSetPortValue+0x78>
    12fe:	14 c0       	rjmp	.+40     	; 0x1328 <DIO_enumSetPortValue+0x82>
		{
		case DIO_PORTA: PORTA = Copy_u8Value; break;
    1300:	eb e3       	ldi	r30, 0x3B	; 59
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	8b 81       	ldd	r24, Y+3	; 0x03
    1306:	80 83       	st	Z, r24
    1308:	12 c0       	rjmp	.+36     	; 0x132e <DIO_enumSetPortValue+0x88>
		case DIO_PORTB: PORTB = Copy_u8Value; break;
    130a:	e8 e3       	ldi	r30, 0x38	; 56
    130c:	f0 e0       	ldi	r31, 0x00	; 0
    130e:	8b 81       	ldd	r24, Y+3	; 0x03
    1310:	80 83       	st	Z, r24
    1312:	0d c0       	rjmp	.+26     	; 0x132e <DIO_enumSetPortValue+0x88>
		case DIO_PORTC: PORTC = Copy_u8Value; break;
    1314:	e5 e3       	ldi	r30, 0x35	; 53
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	8b 81       	ldd	r24, Y+3	; 0x03
    131a:	80 83       	st	Z, r24
    131c:	08 c0       	rjmp	.+16     	; 0x132e <DIO_enumSetPortValue+0x88>
		case DIO_PORTD: PORTD = Copy_u8Value; break;
    131e:	e2 e3       	ldi	r30, 0x32	; 50
    1320:	f0 e0       	ldi	r31, 0x00	; 0
    1322:	8b 81       	ldd	r24, Y+3	; 0x03
    1324:	80 83       	st	Z, r24
    1326:	03 c0       	rjmp	.+6      	; 0x132e <DIO_enumSetPortValue+0x88>
		default       : LOC_enumState = DIO_NOK; break;
    1328:	19 82       	std	Y+1, r1	; 0x01
    132a:	01 c0       	rjmp	.+2      	; 0x132e <DIO_enumSetPortValue+0x88>
		}	
	}
	else
	{
		//in case of error in the PORT ID 
		LOC_enumState = DIO_NOK;
    132c:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState ;
    132e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1330:	0f 90       	pop	r0
    1332:	0f 90       	pop	r0
    1334:	0f 90       	pop	r0
    1336:	0f 90       	pop	r0
    1338:	0f 90       	pop	r0
    133a:	cf 91       	pop	r28
    133c:	df 91       	pop	r29
    133e:	08 95       	ret

00001340 <DIO_enumGetPortValue>:
 	  =>Copy_u8PORT --> Port Name [ DIO_PORTA , DIO_PORTB , DIO_PORTC , DIO_PORTD ]
 	  => *Copy_PtrData  --> pointer to recieve the port value
 * return : its status and recieve Port Value in pointer
 */
DIO_ErrorStatus   DIO_enumGetPortValue  ( u8 Copy_u8PORT  , u8 * Copy_PtrData )
{
    1340:	df 93       	push	r29
    1342:	cf 93       	push	r28
    1344:	00 d0       	rcall	.+0      	; 0x1346 <DIO_enumGetPortValue+0x6>
    1346:	00 d0       	rcall	.+0      	; 0x1348 <DIO_enumGetPortValue+0x8>
    1348:	00 d0       	rcall	.+0      	; 0x134a <DIO_enumGetPortValue+0xa>
    134a:	cd b7       	in	r28, 0x3d	; 61
    134c:	de b7       	in	r29, 0x3e	; 62
    134e:	8a 83       	std	Y+2, r24	; 0x02
    1350:	7c 83       	std	Y+4, r23	; 0x04
    1352:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	89 83       	std	Y+1, r24	; 0x01

    //Make sure that the Port ID is in the valid range
	if ( (Copy_u8PORT <= DIO_PORTD))
    1358:	8a 81       	ldd	r24, Y+2	; 0x02
    135a:	84 30       	cpi	r24, 0x04	; 4
    135c:	e8 f5       	brcc	.+122    	; 0x13d8 <DIO_enumGetPortValue+0x98>
	{
		//Check on the Required PORT Number 
		switch (Copy_u8PORT)
    135e:	8a 81       	ldd	r24, Y+2	; 0x02
    1360:	28 2f       	mov	r18, r24
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	3e 83       	std	Y+6, r19	; 0x06
    1366:	2d 83       	std	Y+5, r18	; 0x05
    1368:	8d 81       	ldd	r24, Y+5	; 0x05
    136a:	9e 81       	ldd	r25, Y+6	; 0x06
    136c:	81 30       	cpi	r24, 0x01	; 1
    136e:	91 05       	cpc	r25, r1
    1370:	e1 f0       	breq	.+56     	; 0x13aa <DIO_enumGetPortValue+0x6a>
    1372:	2d 81       	ldd	r18, Y+5	; 0x05
    1374:	3e 81       	ldd	r19, Y+6	; 0x06
    1376:	22 30       	cpi	r18, 0x02	; 2
    1378:	31 05       	cpc	r19, r1
    137a:	2c f4       	brge	.+10     	; 0x1386 <DIO_enumGetPortValue+0x46>
    137c:	8d 81       	ldd	r24, Y+5	; 0x05
    137e:	9e 81       	ldd	r25, Y+6	; 0x06
    1380:	00 97       	sbiw	r24, 0x00	; 0
    1382:	61 f0       	breq	.+24     	; 0x139c <DIO_enumGetPortValue+0x5c>
    1384:	27 c0       	rjmp	.+78     	; 0x13d4 <DIO_enumGetPortValue+0x94>
    1386:	2d 81       	ldd	r18, Y+5	; 0x05
    1388:	3e 81       	ldd	r19, Y+6	; 0x06
    138a:	22 30       	cpi	r18, 0x02	; 2
    138c:	31 05       	cpc	r19, r1
    138e:	a1 f0       	breq	.+40     	; 0x13b8 <DIO_enumGetPortValue+0x78>
    1390:	8d 81       	ldd	r24, Y+5	; 0x05
    1392:	9e 81       	ldd	r25, Y+6	; 0x06
    1394:	83 30       	cpi	r24, 0x03	; 3
    1396:	91 05       	cpc	r25, r1
    1398:	b1 f0       	breq	.+44     	; 0x13c6 <DIO_enumGetPortValue+0x86>
    139a:	1c c0       	rjmp	.+56     	; 0x13d4 <DIO_enumGetPortValue+0x94>
		{
			case DIO_PORTA : *Copy_PtrData = PINA ;break ;
    139c:	e9 e3       	ldi	r30, 0x39	; 57
    139e:	f0 e0       	ldi	r31, 0x00	; 0
    13a0:	80 81       	ld	r24, Z
    13a2:	eb 81       	ldd	r30, Y+3	; 0x03
    13a4:	fc 81       	ldd	r31, Y+4	; 0x04
    13a6:	80 83       	st	Z, r24
    13a8:	18 c0       	rjmp	.+48     	; 0x13da <DIO_enumGetPortValue+0x9a>
		    case DIO_PORTB : *Copy_PtrData = PINB ;break ;
    13aa:	e6 e3       	ldi	r30, 0x36	; 54
    13ac:	f0 e0       	ldi	r31, 0x00	; 0
    13ae:	80 81       	ld	r24, Z
    13b0:	eb 81       	ldd	r30, Y+3	; 0x03
    13b2:	fc 81       	ldd	r31, Y+4	; 0x04
    13b4:	80 83       	st	Z, r24
    13b6:	11 c0       	rjmp	.+34     	; 0x13da <DIO_enumGetPortValue+0x9a>
		    case DIO_PORTC : *Copy_PtrData = PINC ;break ;
    13b8:	e3 e3       	ldi	r30, 0x33	; 51
    13ba:	f0 e0       	ldi	r31, 0x00	; 0
    13bc:	80 81       	ld	r24, Z
    13be:	eb 81       	ldd	r30, Y+3	; 0x03
    13c0:	fc 81       	ldd	r31, Y+4	; 0x04
    13c2:	80 83       	st	Z, r24
    13c4:	0a c0       	rjmp	.+20     	; 0x13da <DIO_enumGetPortValue+0x9a>
	        case DIO_PORTD : *Copy_PtrData = PIND ;break ;
    13c6:	e0 e3       	ldi	r30, 0x30	; 48
    13c8:	f0 e0       	ldi	r31, 0x00	; 0
    13ca:	80 81       	ld	r24, Z
    13cc:	eb 81       	ldd	r30, Y+3	; 0x03
    13ce:	fc 81       	ldd	r31, Y+4	; 0x04
    13d0:	80 83       	st	Z, r24
    13d2:	03 c0       	rjmp	.+6      	; 0x13da <DIO_enumGetPortValue+0x9a>
		    default        : LOC_enumState = DIO_NOK; break ;
    13d4:	19 82       	std	Y+1, r1	; 0x01
    13d6:	01 c0       	rjmp	.+2      	; 0x13da <DIO_enumGetPortValue+0x9a>
		}
	}
	else
	{
		//in case of error in the PORT ID 
		LOC_enumState = DIO_NOK;
    13d8:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState ;
    13da:	89 81       	ldd	r24, Y+1	; 0x01
}
    13dc:	26 96       	adiw	r28, 0x06	; 6
    13de:	0f b6       	in	r0, 0x3f	; 63
    13e0:	f8 94       	cli
    13e2:	de bf       	out	0x3e, r29	; 62
    13e4:	0f be       	out	0x3f, r0	; 63
    13e6:	cd bf       	out	0x3d, r28	; 61
    13e8:	cf 91       	pop	r28
    13ea:	df 91       	pop	r29
    13ec:	08 95       	ret

000013ee <DIO_enumTogglePortValue>:
 * Parameters :
 	  =>Copy_u8PORT --> Port Name [ DIO_PORTA , DIO_PORTB , DIO_PORTC , DIO_PORTD ]
 * return : its status
 */
DIO_ErrorStatus DIO_enumTogglePortValue      (u8 Copy_u8PORT                       )
{
    13ee:	df 93       	push	r29
    13f0:	cf 93       	push	r28
    13f2:	00 d0       	rcall	.+0      	; 0x13f4 <DIO_enumTogglePortValue+0x6>
    13f4:	00 d0       	rcall	.+0      	; 0x13f6 <DIO_enumTogglePortValue+0x8>
    13f6:	cd b7       	in	r28, 0x3d	; 61
    13f8:	de b7       	in	r29, 0x3e	; 62
    13fa:	8a 83       	std	Y+2, r24	; 0x02
	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	89 83       	std	Y+1, r24	; 0x01
	
    //Make sure that the Port ID is in the valid range
	if (Copy_u8PORT <= DIO_PORTD)
    1400:	8a 81       	ldd	r24, Y+2	; 0x02
    1402:	84 30       	cpi	r24, 0x04	; 4
    1404:	08 f0       	brcs	.+2      	; 0x1408 <DIO_enumTogglePortValue+0x1a>
    1406:	3f c0       	rjmp	.+126    	; 0x1486 <DIO_enumTogglePortValue+0x98>
	{
		//Check on the Required PORT Number 
		switch (Copy_u8PORT)
    1408:	8a 81       	ldd	r24, Y+2	; 0x02
    140a:	28 2f       	mov	r18, r24
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	3c 83       	std	Y+4, r19	; 0x04
    1410:	2b 83       	std	Y+3, r18	; 0x03
    1412:	8b 81       	ldd	r24, Y+3	; 0x03
    1414:	9c 81       	ldd	r25, Y+4	; 0x04
    1416:	81 30       	cpi	r24, 0x01	; 1
    1418:	91 05       	cpc	r25, r1
    141a:	e9 f0       	breq	.+58     	; 0x1456 <DIO_enumTogglePortValue+0x68>
    141c:	2b 81       	ldd	r18, Y+3	; 0x03
    141e:	3c 81       	ldd	r19, Y+4	; 0x04
    1420:	22 30       	cpi	r18, 0x02	; 2
    1422:	31 05       	cpc	r19, r1
    1424:	2c f4       	brge	.+10     	; 0x1430 <DIO_enumTogglePortValue+0x42>
    1426:	8b 81       	ldd	r24, Y+3	; 0x03
    1428:	9c 81       	ldd	r25, Y+4	; 0x04
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	61 f0       	breq	.+24     	; 0x1446 <DIO_enumTogglePortValue+0x58>
    142e:	2c c0       	rjmp	.+88     	; 0x1488 <DIO_enumTogglePortValue+0x9a>
    1430:	2b 81       	ldd	r18, Y+3	; 0x03
    1432:	3c 81       	ldd	r19, Y+4	; 0x04
    1434:	22 30       	cpi	r18, 0x02	; 2
    1436:	31 05       	cpc	r19, r1
    1438:	b1 f0       	breq	.+44     	; 0x1466 <DIO_enumTogglePortValue+0x78>
    143a:	8b 81       	ldd	r24, Y+3	; 0x03
    143c:	9c 81       	ldd	r25, Y+4	; 0x04
    143e:	83 30       	cpi	r24, 0x03	; 3
    1440:	91 05       	cpc	r25, r1
    1442:	c9 f0       	breq	.+50     	; 0x1476 <DIO_enumTogglePortValue+0x88>
    1444:	21 c0       	rjmp	.+66     	; 0x1488 <DIO_enumTogglePortValue+0x9a>
		{
		case DIO_PORTA : PORTA = ~PORTA ;break ;
    1446:	ab e3       	ldi	r26, 0x3B	; 59
    1448:	b0 e0       	ldi	r27, 0x00	; 0
    144a:	eb e3       	ldi	r30, 0x3B	; 59
    144c:	f0 e0       	ldi	r31, 0x00	; 0
    144e:	80 81       	ld	r24, Z
    1450:	80 95       	com	r24
    1452:	8c 93       	st	X, r24
    1454:	19 c0       	rjmp	.+50     	; 0x1488 <DIO_enumTogglePortValue+0x9a>
		case DIO_PORTB : PORTB = ~PORTB ;break ;
    1456:	a8 e3       	ldi	r26, 0x38	; 56
    1458:	b0 e0       	ldi	r27, 0x00	; 0
    145a:	e8 e3       	ldi	r30, 0x38	; 56
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	80 81       	ld	r24, Z
    1460:	80 95       	com	r24
    1462:	8c 93       	st	X, r24
    1464:	11 c0       	rjmp	.+34     	; 0x1488 <DIO_enumTogglePortValue+0x9a>
		case DIO_PORTC : PORTC = ~PORTC ;break ;
    1466:	a5 e3       	ldi	r26, 0x35	; 53
    1468:	b0 e0       	ldi	r27, 0x00	; 0
    146a:	e5 e3       	ldi	r30, 0x35	; 53
    146c:	f0 e0       	ldi	r31, 0x00	; 0
    146e:	80 81       	ld	r24, Z
    1470:	80 95       	com	r24
    1472:	8c 93       	st	X, r24
    1474:	09 c0       	rjmp	.+18     	; 0x1488 <DIO_enumTogglePortValue+0x9a>
		case DIO_PORTD : PORTD = ~PORTD ;break ;
    1476:	a2 e3       	ldi	r26, 0x32	; 50
    1478:	b0 e0       	ldi	r27, 0x00	; 0
    147a:	e2 e3       	ldi	r30, 0x32	; 50
    147c:	f0 e0       	ldi	r31, 0x00	; 0
    147e:	80 81       	ld	r24, Z
    1480:	80 95       	com	r24
    1482:	8c 93       	st	X, r24
    1484:	01 c0       	rjmp	.+2      	; 0x1488 <DIO_enumTogglePortValue+0x9a>
		}
	}
	else
	{
		//in case of error in the PORT ID 
		LOC_enumState = DIO_NOK;
    1486:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState ;
    1488:	89 81       	ldd	r24, Y+1	; 0x01
}
    148a:	0f 90       	pop	r0
    148c:	0f 90       	pop	r0
    148e:	0f 90       	pop	r0
    1490:	0f 90       	pop	r0
    1492:	cf 91       	pop	r28
    1494:	df 91       	pop	r29
    1496:	08 95       	ret

00001498 <LED_voidInit>:
* Parameters :
            => struct has the led port , pin , status
* return : void 
*/
void LED_voidInit( LED_Type LED_Configuration )
{
    1498:	df 93       	push	r29
    149a:	cf 93       	push	r28
    149c:	00 d0       	rcall	.+0      	; 0x149e <LED_voidInit+0x6>
    149e:	0f 92       	push	r0
    14a0:	cd b7       	in	r28, 0x3d	; 61
    14a2:	de b7       	in	r29, 0x3e	; 62
    14a4:	69 83       	std	Y+1, r22	; 0x01
    14a6:	7a 83       	std	Y+2, r23	; 0x02
    14a8:	8b 83       	std	Y+3, r24	; 0x03
	
	DIO_enumSetPinDirection( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_OUTPUT );
    14aa:	89 81       	ldd	r24, Y+1	; 0x01
    14ac:	9a 81       	ldd	r25, Y+2	; 0x02
    14ae:	69 2f       	mov	r22, r25
    14b0:	41 e0       	ldi	r20, 0x01	; 1
    14b2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_enumSetPinDirection>
	
}
    14b6:	0f 90       	pop	r0
    14b8:	0f 90       	pop	r0
    14ba:	0f 90       	pop	r0
    14bc:	cf 91       	pop	r28
    14be:	df 91       	pop	r29
    14c0:	08 95       	ret

000014c2 <LED_voidOn>:
* Parameters :
            => struct has the led port , pin , status
* return : void 
*/
void LED_voidOn  ( LED_Type LED_Configuration )
{
    14c2:	df 93       	push	r29
    14c4:	cf 93       	push	r28
    14c6:	00 d0       	rcall	.+0      	; 0x14c8 <LED_voidOn+0x6>
    14c8:	0f 92       	push	r0
    14ca:	cd b7       	in	r28, 0x3d	; 61
    14cc:	de b7       	in	r29, 0x3e	; 62
    14ce:	69 83       	std	Y+1, r22	; 0x01
    14d0:	7a 83       	std	Y+2, r23	; 0x02
    14d2:	8b 83       	std	Y+3, r24	; 0x03
	
	if( LED_Configuration.Active_State == ACTIVE_HIGH ){
    14d4:	8b 81       	ldd	r24, Y+3	; 0x03
    14d6:	81 30       	cpi	r24, 0x01	; 1
    14d8:	39 f4       	brne	.+14     	; 0x14e8 <LED_voidOn+0x26>
		
		DIO_enumSetPinValue( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_HIGH );
    14da:	89 81       	ldd	r24, Y+1	; 0x01
    14dc:	9a 81       	ldd	r25, Y+2	; 0x02
    14de:	69 2f       	mov	r22, r25
    14e0:	41 e0       	ldi	r20, 0x01	; 1
    14e2:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
    14e6:	09 c0       	rjmp	.+18     	; 0x14fa <LED_voidOn+0x38>
		
	}else if( LED_Configuration.Active_State == ACTIVE_LOW ){
    14e8:	8b 81       	ldd	r24, Y+3	; 0x03
    14ea:	88 23       	and	r24, r24
    14ec:	31 f4       	brne	.+12     	; 0x14fa <LED_voidOn+0x38>
		
		DIO_enumSetPinValue( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_LOW  );
    14ee:	89 81       	ldd	r24, Y+1	; 0x01
    14f0:	9a 81       	ldd	r25, Y+2	; 0x02
    14f2:	69 2f       	mov	r22, r25
    14f4:	40 e0       	ldi	r20, 0x00	; 0
    14f6:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
		
	}
	
}
    14fa:	0f 90       	pop	r0
    14fc:	0f 90       	pop	r0
    14fe:	0f 90       	pop	r0
    1500:	cf 91       	pop	r28
    1502:	df 91       	pop	r29
    1504:	08 95       	ret

00001506 <LED_voidOff>:
* Parameters :
             => struct has the led port , pin , status
* return : void 
*/
void LED_voidOff ( LED_Type LED_Configuration )
{
    1506:	df 93       	push	r29
    1508:	cf 93       	push	r28
    150a:	00 d0       	rcall	.+0      	; 0x150c <LED_voidOff+0x6>
    150c:	0f 92       	push	r0
    150e:	cd b7       	in	r28, 0x3d	; 61
    1510:	de b7       	in	r29, 0x3e	; 62
    1512:	69 83       	std	Y+1, r22	; 0x01
    1514:	7a 83       	std	Y+2, r23	; 0x02
    1516:	8b 83       	std	Y+3, r24	; 0x03
	
	if( LED_Configuration.Active_State == ACTIVE_HIGH ){
    1518:	8b 81       	ldd	r24, Y+3	; 0x03
    151a:	81 30       	cpi	r24, 0x01	; 1
    151c:	39 f4       	brne	.+14     	; 0x152c <LED_voidOff+0x26>
		
		DIO_enumSetPinValue( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_LOW  );
    151e:	89 81       	ldd	r24, Y+1	; 0x01
    1520:	9a 81       	ldd	r25, Y+2	; 0x02
    1522:	69 2f       	mov	r22, r25
    1524:	40 e0       	ldi	r20, 0x00	; 0
    1526:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
    152a:	09 c0       	rjmp	.+18     	; 0x153e <LED_voidOff+0x38>
		
	}else if( LED_Configuration.Active_State == ACTIVE_LOW ){
    152c:	8b 81       	ldd	r24, Y+3	; 0x03
    152e:	88 23       	and	r24, r24
    1530:	31 f4       	brne	.+12     	; 0x153e <LED_voidOff+0x38>
		
		DIO_enumSetPinValue( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_HIGH  );
    1532:	89 81       	ldd	r24, Y+1	; 0x01
    1534:	9a 81       	ldd	r25, Y+2	; 0x02
    1536:	69 2f       	mov	r22, r25
    1538:	41 e0       	ldi	r20, 0x01	; 1
    153a:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
		
	}
	
}
    153e:	0f 90       	pop	r0
    1540:	0f 90       	pop	r0
    1542:	0f 90       	pop	r0
    1544:	cf 91       	pop	r28
    1546:	df 91       	pop	r29
    1548:	08 95       	ret

0000154a <LED_voidToggle>:
* Parameters :
             => struct has the led port , pin , status
* return : void 
*/
void LED_voidToggle      ( LED_Type LED_Configuration )
{
    154a:	df 93       	push	r29
    154c:	cf 93       	push	r28
    154e:	00 d0       	rcall	.+0      	; 0x1550 <LED_voidToggle+0x6>
    1550:	0f 92       	push	r0
    1552:	cd b7       	in	r28, 0x3d	; 61
    1554:	de b7       	in	r29, 0x3e	; 62
    1556:	69 83       	std	Y+1, r22	; 0x01
    1558:	7a 83       	std	Y+2, r23	; 0x02
    155a:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumTogglePinValue  ( LED_Configuration.Port , LED_Configuration.Pin );
    155c:	89 81       	ldd	r24, Y+1	; 0x01
    155e:	9a 81       	ldd	r25, Y+2	; 0x02
    1560:	69 2f       	mov	r22, r25
    1562:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <DIO_enumTogglePinValue>
}
    1566:	0f 90       	pop	r0
    1568:	0f 90       	pop	r0
    156a:	0f 90       	pop	r0
    156c:	cf 91       	pop	r28
    156e:	df 91       	pop	r29
    1570:	08 95       	ret

00001572 <main>:
#include"LED_interface.h"

#include"util/delay.h"

int main(void)
{
    1572:	df 93       	push	r29
    1574:	cf 93       	push	r28
    1576:	cd b7       	in	r28, 0x3d	; 61
    1578:	de b7       	in	r29, 0x3e	; 62
    157a:	c0 5a       	subi	r28, 0xA0	; 160
    157c:	d0 40       	sbci	r29, 0x00	; 0
    157e:	0f b6       	in	r0, 0x3f	; 63
    1580:	f8 94       	cli
    1582:	de bf       	out	0x3e, r29	; 62
    1584:	0f be       	out	0x3f, r0	; 63
    1586:	cd bf       	out	0x3d, r28	; 61
	LED_Type LED0 = {LED_PORTA,LED_PIN0,ACTIVE_HIGH};
    1588:	ce 01       	movw	r24, r28
    158a:	81 96       	adiw	r24, 0x21	; 33
    158c:	63 96       	adiw	r28, 0x13	; 19
    158e:	9f af       	std	Y+63, r25	; 0x3f
    1590:	8e af       	std	Y+62, r24	; 0x3e
    1592:	63 97       	sbiw	r28, 0x13	; 19
    1594:	ad e7       	ldi	r26, 0x7D	; 125
    1596:	b0 e0       	ldi	r27, 0x00	; 0
    1598:	65 96       	adiw	r28, 0x15	; 21
    159a:	bf af       	std	Y+63, r27	; 0x3f
    159c:	ae af       	std	Y+62, r26	; 0x3e
    159e:	65 97       	sbiw	r28, 0x15	; 21
    15a0:	b3 e0       	ldi	r27, 0x03	; 3
    15a2:	66 96       	adiw	r28, 0x16	; 22
    15a4:	bf af       	std	Y+63, r27	; 0x3f
    15a6:	66 97       	sbiw	r28, 0x16	; 22
    15a8:	65 96       	adiw	r28, 0x15	; 21
    15aa:	ee ad       	ldd	r30, Y+62	; 0x3e
    15ac:	ff ad       	ldd	r31, Y+63	; 0x3f
    15ae:	65 97       	sbiw	r28, 0x15	; 21
    15b0:	00 80       	ld	r0, Z
    15b2:	65 96       	adiw	r28, 0x15	; 21
    15b4:	8e ad       	ldd	r24, Y+62	; 0x3e
    15b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    15b8:	65 97       	sbiw	r28, 0x15	; 21
    15ba:	01 96       	adiw	r24, 0x01	; 1
    15bc:	65 96       	adiw	r28, 0x15	; 21
    15be:	9f af       	std	Y+63, r25	; 0x3f
    15c0:	8e af       	std	Y+62, r24	; 0x3e
    15c2:	65 97       	sbiw	r28, 0x15	; 21
    15c4:	63 96       	adiw	r28, 0x13	; 19
    15c6:	ae ad       	ldd	r26, Y+62	; 0x3e
    15c8:	bf ad       	ldd	r27, Y+63	; 0x3f
    15ca:	63 97       	sbiw	r28, 0x13	; 19
    15cc:	0c 92       	st	X, r0
    15ce:	63 96       	adiw	r28, 0x13	; 19
    15d0:	ee ad       	ldd	r30, Y+62	; 0x3e
    15d2:	ff ad       	ldd	r31, Y+63	; 0x3f
    15d4:	63 97       	sbiw	r28, 0x13	; 19
    15d6:	31 96       	adiw	r30, 0x01	; 1
    15d8:	63 96       	adiw	r28, 0x13	; 19
    15da:	ff af       	std	Y+63, r31	; 0x3f
    15dc:	ee af       	std	Y+62, r30	; 0x3e
    15de:	63 97       	sbiw	r28, 0x13	; 19
    15e0:	66 96       	adiw	r28, 0x16	; 22
    15e2:	ff ad       	ldd	r31, Y+63	; 0x3f
    15e4:	66 97       	sbiw	r28, 0x16	; 22
    15e6:	f1 50       	subi	r31, 0x01	; 1
    15e8:	66 96       	adiw	r28, 0x16	; 22
    15ea:	ff af       	std	Y+63, r31	; 0x3f
    15ec:	66 97       	sbiw	r28, 0x16	; 22
    15ee:	66 96       	adiw	r28, 0x16	; 22
    15f0:	8f ad       	ldd	r24, Y+63	; 0x3f
    15f2:	66 97       	sbiw	r28, 0x16	; 22
    15f4:	88 23       	and	r24, r24
    15f6:	c1 f6       	brne	.-80     	; 0x15a8 <main+0x36>
	LED_Type LED1 = {LED_PORTA,LED_PIN1,ACTIVE_HIGH};
    15f8:	de 01       	movw	r26, r28
    15fa:	94 96       	adiw	r26, 0x24	; 36
    15fc:	68 96       	adiw	r28, 0x18	; 24
    15fe:	bf af       	std	Y+63, r27	; 0x3f
    1600:	ae af       	std	Y+62, r26	; 0x3e
    1602:	68 97       	sbiw	r28, 0x18	; 24
    1604:	ea e7       	ldi	r30, 0x7A	; 122
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	6a 96       	adiw	r28, 0x1a	; 26
    160a:	ff af       	std	Y+63, r31	; 0x3f
    160c:	ee af       	std	Y+62, r30	; 0x3e
    160e:	6a 97       	sbiw	r28, 0x1a	; 26
    1610:	f3 e0       	ldi	r31, 0x03	; 3
    1612:	6b 96       	adiw	r28, 0x1b	; 27
    1614:	ff af       	std	Y+63, r31	; 0x3f
    1616:	6b 97       	sbiw	r28, 0x1b	; 27
    1618:	6a 96       	adiw	r28, 0x1a	; 26
    161a:	ae ad       	ldd	r26, Y+62	; 0x3e
    161c:	bf ad       	ldd	r27, Y+63	; 0x3f
    161e:	6a 97       	sbiw	r28, 0x1a	; 26
    1620:	0c 90       	ld	r0, X
    1622:	6a 96       	adiw	r28, 0x1a	; 26
    1624:	ee ad       	ldd	r30, Y+62	; 0x3e
    1626:	ff ad       	ldd	r31, Y+63	; 0x3f
    1628:	6a 97       	sbiw	r28, 0x1a	; 26
    162a:	31 96       	adiw	r30, 0x01	; 1
    162c:	6a 96       	adiw	r28, 0x1a	; 26
    162e:	ff af       	std	Y+63, r31	; 0x3f
    1630:	ee af       	std	Y+62, r30	; 0x3e
    1632:	6a 97       	sbiw	r28, 0x1a	; 26
    1634:	68 96       	adiw	r28, 0x18	; 24
    1636:	ae ad       	ldd	r26, Y+62	; 0x3e
    1638:	bf ad       	ldd	r27, Y+63	; 0x3f
    163a:	68 97       	sbiw	r28, 0x18	; 24
    163c:	0c 92       	st	X, r0
    163e:	68 96       	adiw	r28, 0x18	; 24
    1640:	ee ad       	ldd	r30, Y+62	; 0x3e
    1642:	ff ad       	ldd	r31, Y+63	; 0x3f
    1644:	68 97       	sbiw	r28, 0x18	; 24
    1646:	31 96       	adiw	r30, 0x01	; 1
    1648:	68 96       	adiw	r28, 0x18	; 24
    164a:	ff af       	std	Y+63, r31	; 0x3f
    164c:	ee af       	std	Y+62, r30	; 0x3e
    164e:	68 97       	sbiw	r28, 0x18	; 24
    1650:	6b 96       	adiw	r28, 0x1b	; 27
    1652:	ff ad       	ldd	r31, Y+63	; 0x3f
    1654:	6b 97       	sbiw	r28, 0x1b	; 27
    1656:	f1 50       	subi	r31, 0x01	; 1
    1658:	6b 96       	adiw	r28, 0x1b	; 27
    165a:	ff af       	std	Y+63, r31	; 0x3f
    165c:	6b 97       	sbiw	r28, 0x1b	; 27
    165e:	6b 96       	adiw	r28, 0x1b	; 27
    1660:	8f ad       	ldd	r24, Y+63	; 0x3f
    1662:	6b 97       	sbiw	r28, 0x1b	; 27
    1664:	88 23       	and	r24, r24
    1666:	c1 f6       	brne	.-80     	; 0x1618 <main+0xa6>
	LED_Type LED2 = {LED_PORTA,LED_PIN2,ACTIVE_HIGH};
    1668:	de 01       	movw	r26, r28
    166a:	97 96       	adiw	r26, 0x27	; 39
    166c:	6d 96       	adiw	r28, 0x1d	; 29
    166e:	bf af       	std	Y+63, r27	; 0x3f
    1670:	ae af       	std	Y+62, r26	; 0x3e
    1672:	6d 97       	sbiw	r28, 0x1d	; 29
    1674:	e7 e7       	ldi	r30, 0x77	; 119
    1676:	f0 e0       	ldi	r31, 0x00	; 0
    1678:	6f 96       	adiw	r28, 0x1f	; 31
    167a:	ff af       	std	Y+63, r31	; 0x3f
    167c:	ee af       	std	Y+62, r30	; 0x3e
    167e:	6f 97       	sbiw	r28, 0x1f	; 31
    1680:	f3 e0       	ldi	r31, 0x03	; 3
    1682:	a0 96       	adiw	r28, 0x20	; 32
    1684:	ff af       	std	Y+63, r31	; 0x3f
    1686:	a0 97       	sbiw	r28, 0x20	; 32
    1688:	6f 96       	adiw	r28, 0x1f	; 31
    168a:	ae ad       	ldd	r26, Y+62	; 0x3e
    168c:	bf ad       	ldd	r27, Y+63	; 0x3f
    168e:	6f 97       	sbiw	r28, 0x1f	; 31
    1690:	0c 90       	ld	r0, X
    1692:	6f 96       	adiw	r28, 0x1f	; 31
    1694:	ee ad       	ldd	r30, Y+62	; 0x3e
    1696:	ff ad       	ldd	r31, Y+63	; 0x3f
    1698:	6f 97       	sbiw	r28, 0x1f	; 31
    169a:	31 96       	adiw	r30, 0x01	; 1
    169c:	6f 96       	adiw	r28, 0x1f	; 31
    169e:	ff af       	std	Y+63, r31	; 0x3f
    16a0:	ee af       	std	Y+62, r30	; 0x3e
    16a2:	6f 97       	sbiw	r28, 0x1f	; 31
    16a4:	6d 96       	adiw	r28, 0x1d	; 29
    16a6:	ae ad       	ldd	r26, Y+62	; 0x3e
    16a8:	bf ad       	ldd	r27, Y+63	; 0x3f
    16aa:	6d 97       	sbiw	r28, 0x1d	; 29
    16ac:	0c 92       	st	X, r0
    16ae:	6d 96       	adiw	r28, 0x1d	; 29
    16b0:	ee ad       	ldd	r30, Y+62	; 0x3e
    16b2:	ff ad       	ldd	r31, Y+63	; 0x3f
    16b4:	6d 97       	sbiw	r28, 0x1d	; 29
    16b6:	31 96       	adiw	r30, 0x01	; 1
    16b8:	6d 96       	adiw	r28, 0x1d	; 29
    16ba:	ff af       	std	Y+63, r31	; 0x3f
    16bc:	ee af       	std	Y+62, r30	; 0x3e
    16be:	6d 97       	sbiw	r28, 0x1d	; 29
    16c0:	a0 96       	adiw	r28, 0x20	; 32
    16c2:	ff ad       	ldd	r31, Y+63	; 0x3f
    16c4:	a0 97       	sbiw	r28, 0x20	; 32
    16c6:	f1 50       	subi	r31, 0x01	; 1
    16c8:	a0 96       	adiw	r28, 0x20	; 32
    16ca:	ff af       	std	Y+63, r31	; 0x3f
    16cc:	a0 97       	sbiw	r28, 0x20	; 32
    16ce:	a0 96       	adiw	r28, 0x20	; 32
    16d0:	8f ad       	ldd	r24, Y+63	; 0x3f
    16d2:	a0 97       	sbiw	r28, 0x20	; 32
    16d4:	88 23       	and	r24, r24
    16d6:	c1 f6       	brne	.-80     	; 0x1688 <main+0x116>
	LED_Type LED3 = {LED_PORTA,LED_PIN3,ACTIVE_HIGH};
    16d8:	de 01       	movw	r26, r28
    16da:	9a 96       	adiw	r26, 0x2a	; 42
    16dc:	a2 96       	adiw	r28, 0x22	; 34
    16de:	bf af       	std	Y+63, r27	; 0x3f
    16e0:	ae af       	std	Y+62, r26	; 0x3e
    16e2:	a2 97       	sbiw	r28, 0x22	; 34
    16e4:	e4 e7       	ldi	r30, 0x74	; 116
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	a4 96       	adiw	r28, 0x24	; 36
    16ea:	ff af       	std	Y+63, r31	; 0x3f
    16ec:	ee af       	std	Y+62, r30	; 0x3e
    16ee:	a4 97       	sbiw	r28, 0x24	; 36
    16f0:	f3 e0       	ldi	r31, 0x03	; 3
    16f2:	a5 96       	adiw	r28, 0x25	; 37
    16f4:	ff af       	std	Y+63, r31	; 0x3f
    16f6:	a5 97       	sbiw	r28, 0x25	; 37
    16f8:	a4 96       	adiw	r28, 0x24	; 36
    16fa:	ae ad       	ldd	r26, Y+62	; 0x3e
    16fc:	bf ad       	ldd	r27, Y+63	; 0x3f
    16fe:	a4 97       	sbiw	r28, 0x24	; 36
    1700:	0c 90       	ld	r0, X
    1702:	a4 96       	adiw	r28, 0x24	; 36
    1704:	ee ad       	ldd	r30, Y+62	; 0x3e
    1706:	ff ad       	ldd	r31, Y+63	; 0x3f
    1708:	a4 97       	sbiw	r28, 0x24	; 36
    170a:	31 96       	adiw	r30, 0x01	; 1
    170c:	a4 96       	adiw	r28, 0x24	; 36
    170e:	ff af       	std	Y+63, r31	; 0x3f
    1710:	ee af       	std	Y+62, r30	; 0x3e
    1712:	a4 97       	sbiw	r28, 0x24	; 36
    1714:	a2 96       	adiw	r28, 0x22	; 34
    1716:	ae ad       	ldd	r26, Y+62	; 0x3e
    1718:	bf ad       	ldd	r27, Y+63	; 0x3f
    171a:	a2 97       	sbiw	r28, 0x22	; 34
    171c:	0c 92       	st	X, r0
    171e:	a2 96       	adiw	r28, 0x22	; 34
    1720:	ee ad       	ldd	r30, Y+62	; 0x3e
    1722:	ff ad       	ldd	r31, Y+63	; 0x3f
    1724:	a2 97       	sbiw	r28, 0x22	; 34
    1726:	31 96       	adiw	r30, 0x01	; 1
    1728:	a2 96       	adiw	r28, 0x22	; 34
    172a:	ff af       	std	Y+63, r31	; 0x3f
    172c:	ee af       	std	Y+62, r30	; 0x3e
    172e:	a2 97       	sbiw	r28, 0x22	; 34
    1730:	a5 96       	adiw	r28, 0x25	; 37
    1732:	ff ad       	ldd	r31, Y+63	; 0x3f
    1734:	a5 97       	sbiw	r28, 0x25	; 37
    1736:	f1 50       	subi	r31, 0x01	; 1
    1738:	a5 96       	adiw	r28, 0x25	; 37
    173a:	ff af       	std	Y+63, r31	; 0x3f
    173c:	a5 97       	sbiw	r28, 0x25	; 37
    173e:	a5 96       	adiw	r28, 0x25	; 37
    1740:	8f ad       	ldd	r24, Y+63	; 0x3f
    1742:	a5 97       	sbiw	r28, 0x25	; 37
    1744:	88 23       	and	r24, r24
    1746:	c1 f6       	brne	.-80     	; 0x16f8 <main+0x186>
	LED_Type LED4 = {LED_PORTA,LED_PIN4,ACTIVE_HIGH};
    1748:	de 01       	movw	r26, r28
    174a:	9d 96       	adiw	r26, 0x2d	; 45
    174c:	a7 96       	adiw	r28, 0x27	; 39
    174e:	bf af       	std	Y+63, r27	; 0x3f
    1750:	ae af       	std	Y+62, r26	; 0x3e
    1752:	a7 97       	sbiw	r28, 0x27	; 39
    1754:	e1 e7       	ldi	r30, 0x71	; 113
    1756:	f0 e0       	ldi	r31, 0x00	; 0
    1758:	a9 96       	adiw	r28, 0x29	; 41
    175a:	ff af       	std	Y+63, r31	; 0x3f
    175c:	ee af       	std	Y+62, r30	; 0x3e
    175e:	a9 97       	sbiw	r28, 0x29	; 41
    1760:	f3 e0       	ldi	r31, 0x03	; 3
    1762:	aa 96       	adiw	r28, 0x2a	; 42
    1764:	ff af       	std	Y+63, r31	; 0x3f
    1766:	aa 97       	sbiw	r28, 0x2a	; 42
    1768:	a9 96       	adiw	r28, 0x29	; 41
    176a:	ae ad       	ldd	r26, Y+62	; 0x3e
    176c:	bf ad       	ldd	r27, Y+63	; 0x3f
    176e:	a9 97       	sbiw	r28, 0x29	; 41
    1770:	0c 90       	ld	r0, X
    1772:	a9 96       	adiw	r28, 0x29	; 41
    1774:	ee ad       	ldd	r30, Y+62	; 0x3e
    1776:	ff ad       	ldd	r31, Y+63	; 0x3f
    1778:	a9 97       	sbiw	r28, 0x29	; 41
    177a:	31 96       	adiw	r30, 0x01	; 1
    177c:	a9 96       	adiw	r28, 0x29	; 41
    177e:	ff af       	std	Y+63, r31	; 0x3f
    1780:	ee af       	std	Y+62, r30	; 0x3e
    1782:	a9 97       	sbiw	r28, 0x29	; 41
    1784:	a7 96       	adiw	r28, 0x27	; 39
    1786:	ae ad       	ldd	r26, Y+62	; 0x3e
    1788:	bf ad       	ldd	r27, Y+63	; 0x3f
    178a:	a7 97       	sbiw	r28, 0x27	; 39
    178c:	0c 92       	st	X, r0
    178e:	a7 96       	adiw	r28, 0x27	; 39
    1790:	ee ad       	ldd	r30, Y+62	; 0x3e
    1792:	ff ad       	ldd	r31, Y+63	; 0x3f
    1794:	a7 97       	sbiw	r28, 0x27	; 39
    1796:	31 96       	adiw	r30, 0x01	; 1
    1798:	a7 96       	adiw	r28, 0x27	; 39
    179a:	ff af       	std	Y+63, r31	; 0x3f
    179c:	ee af       	std	Y+62, r30	; 0x3e
    179e:	a7 97       	sbiw	r28, 0x27	; 39
    17a0:	aa 96       	adiw	r28, 0x2a	; 42
    17a2:	ff ad       	ldd	r31, Y+63	; 0x3f
    17a4:	aa 97       	sbiw	r28, 0x2a	; 42
    17a6:	f1 50       	subi	r31, 0x01	; 1
    17a8:	aa 96       	adiw	r28, 0x2a	; 42
    17aa:	ff af       	std	Y+63, r31	; 0x3f
    17ac:	aa 97       	sbiw	r28, 0x2a	; 42
    17ae:	aa 96       	adiw	r28, 0x2a	; 42
    17b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    17b2:	aa 97       	sbiw	r28, 0x2a	; 42
    17b4:	88 23       	and	r24, r24
    17b6:	c1 f6       	brne	.-80     	; 0x1768 <main+0x1f6>
	LED_Type LED5 = {LED_PORTA,LED_PIN5,ACTIVE_HIGH};
    17b8:	de 01       	movw	r26, r28
    17ba:	d0 96       	adiw	r26, 0x30	; 48
    17bc:	ac 96       	adiw	r28, 0x2c	; 44
    17be:	bf af       	std	Y+63, r27	; 0x3f
    17c0:	ae af       	std	Y+62, r26	; 0x3e
    17c2:	ac 97       	sbiw	r28, 0x2c	; 44
    17c4:	ee e6       	ldi	r30, 0x6E	; 110
    17c6:	f0 e0       	ldi	r31, 0x00	; 0
    17c8:	ae 96       	adiw	r28, 0x2e	; 46
    17ca:	ff af       	std	Y+63, r31	; 0x3f
    17cc:	ee af       	std	Y+62, r30	; 0x3e
    17ce:	ae 97       	sbiw	r28, 0x2e	; 46
    17d0:	f3 e0       	ldi	r31, 0x03	; 3
    17d2:	af 96       	adiw	r28, 0x2f	; 47
    17d4:	ff af       	std	Y+63, r31	; 0x3f
    17d6:	af 97       	sbiw	r28, 0x2f	; 47
    17d8:	ae 96       	adiw	r28, 0x2e	; 46
    17da:	ae ad       	ldd	r26, Y+62	; 0x3e
    17dc:	bf ad       	ldd	r27, Y+63	; 0x3f
    17de:	ae 97       	sbiw	r28, 0x2e	; 46
    17e0:	0c 90       	ld	r0, X
    17e2:	ae 96       	adiw	r28, 0x2e	; 46
    17e4:	ee ad       	ldd	r30, Y+62	; 0x3e
    17e6:	ff ad       	ldd	r31, Y+63	; 0x3f
    17e8:	ae 97       	sbiw	r28, 0x2e	; 46
    17ea:	31 96       	adiw	r30, 0x01	; 1
    17ec:	ae 96       	adiw	r28, 0x2e	; 46
    17ee:	ff af       	std	Y+63, r31	; 0x3f
    17f0:	ee af       	std	Y+62, r30	; 0x3e
    17f2:	ae 97       	sbiw	r28, 0x2e	; 46
    17f4:	ac 96       	adiw	r28, 0x2c	; 44
    17f6:	ae ad       	ldd	r26, Y+62	; 0x3e
    17f8:	bf ad       	ldd	r27, Y+63	; 0x3f
    17fa:	ac 97       	sbiw	r28, 0x2c	; 44
    17fc:	0c 92       	st	X, r0
    17fe:	ac 96       	adiw	r28, 0x2c	; 44
    1800:	ee ad       	ldd	r30, Y+62	; 0x3e
    1802:	ff ad       	ldd	r31, Y+63	; 0x3f
    1804:	ac 97       	sbiw	r28, 0x2c	; 44
    1806:	31 96       	adiw	r30, 0x01	; 1
    1808:	ac 96       	adiw	r28, 0x2c	; 44
    180a:	ff af       	std	Y+63, r31	; 0x3f
    180c:	ee af       	std	Y+62, r30	; 0x3e
    180e:	ac 97       	sbiw	r28, 0x2c	; 44
    1810:	af 96       	adiw	r28, 0x2f	; 47
    1812:	ff ad       	ldd	r31, Y+63	; 0x3f
    1814:	af 97       	sbiw	r28, 0x2f	; 47
    1816:	f1 50       	subi	r31, 0x01	; 1
    1818:	af 96       	adiw	r28, 0x2f	; 47
    181a:	ff af       	std	Y+63, r31	; 0x3f
    181c:	af 97       	sbiw	r28, 0x2f	; 47
    181e:	af 96       	adiw	r28, 0x2f	; 47
    1820:	8f ad       	ldd	r24, Y+63	; 0x3f
    1822:	af 97       	sbiw	r28, 0x2f	; 47
    1824:	88 23       	and	r24, r24
    1826:	c1 f6       	brne	.-80     	; 0x17d8 <main+0x266>
	LED_Type LED6 = {LED_PORTA,LED_PIN6,ACTIVE_HIGH};
    1828:	de 01       	movw	r26, r28
    182a:	d3 96       	adiw	r26, 0x33	; 51
    182c:	e1 96       	adiw	r28, 0x31	; 49
    182e:	bf af       	std	Y+63, r27	; 0x3f
    1830:	ae af       	std	Y+62, r26	; 0x3e
    1832:	e1 97       	sbiw	r28, 0x31	; 49
    1834:	eb e6       	ldi	r30, 0x6B	; 107
    1836:	f0 e0       	ldi	r31, 0x00	; 0
    1838:	e3 96       	adiw	r28, 0x33	; 51
    183a:	ff af       	std	Y+63, r31	; 0x3f
    183c:	ee af       	std	Y+62, r30	; 0x3e
    183e:	e3 97       	sbiw	r28, 0x33	; 51
    1840:	f3 e0       	ldi	r31, 0x03	; 3
    1842:	e4 96       	adiw	r28, 0x34	; 52
    1844:	ff af       	std	Y+63, r31	; 0x3f
    1846:	e4 97       	sbiw	r28, 0x34	; 52
    1848:	e3 96       	adiw	r28, 0x33	; 51
    184a:	ae ad       	ldd	r26, Y+62	; 0x3e
    184c:	bf ad       	ldd	r27, Y+63	; 0x3f
    184e:	e3 97       	sbiw	r28, 0x33	; 51
    1850:	0c 90       	ld	r0, X
    1852:	e3 96       	adiw	r28, 0x33	; 51
    1854:	ee ad       	ldd	r30, Y+62	; 0x3e
    1856:	ff ad       	ldd	r31, Y+63	; 0x3f
    1858:	e3 97       	sbiw	r28, 0x33	; 51
    185a:	31 96       	adiw	r30, 0x01	; 1
    185c:	e3 96       	adiw	r28, 0x33	; 51
    185e:	ff af       	std	Y+63, r31	; 0x3f
    1860:	ee af       	std	Y+62, r30	; 0x3e
    1862:	e3 97       	sbiw	r28, 0x33	; 51
    1864:	e1 96       	adiw	r28, 0x31	; 49
    1866:	ae ad       	ldd	r26, Y+62	; 0x3e
    1868:	bf ad       	ldd	r27, Y+63	; 0x3f
    186a:	e1 97       	sbiw	r28, 0x31	; 49
    186c:	0c 92       	st	X, r0
    186e:	e1 96       	adiw	r28, 0x31	; 49
    1870:	ee ad       	ldd	r30, Y+62	; 0x3e
    1872:	ff ad       	ldd	r31, Y+63	; 0x3f
    1874:	e1 97       	sbiw	r28, 0x31	; 49
    1876:	31 96       	adiw	r30, 0x01	; 1
    1878:	e1 96       	adiw	r28, 0x31	; 49
    187a:	ff af       	std	Y+63, r31	; 0x3f
    187c:	ee af       	std	Y+62, r30	; 0x3e
    187e:	e1 97       	sbiw	r28, 0x31	; 49
    1880:	e4 96       	adiw	r28, 0x34	; 52
    1882:	ff ad       	ldd	r31, Y+63	; 0x3f
    1884:	e4 97       	sbiw	r28, 0x34	; 52
    1886:	f1 50       	subi	r31, 0x01	; 1
    1888:	e4 96       	adiw	r28, 0x34	; 52
    188a:	ff af       	std	Y+63, r31	; 0x3f
    188c:	e4 97       	sbiw	r28, 0x34	; 52
    188e:	e4 96       	adiw	r28, 0x34	; 52
    1890:	8f ad       	ldd	r24, Y+63	; 0x3f
    1892:	e4 97       	sbiw	r28, 0x34	; 52
    1894:	88 23       	and	r24, r24
    1896:	c1 f6       	brne	.-80     	; 0x1848 <main+0x2d6>
	LED_Type LED7 = {LED_PORTA,LED_PIN7,ACTIVE_HIGH};
    1898:	de 01       	movw	r26, r28
    189a:	d6 96       	adiw	r26, 0x36	; 54
    189c:	e6 96       	adiw	r28, 0x36	; 54
    189e:	bf af       	std	Y+63, r27	; 0x3f
    18a0:	ae af       	std	Y+62, r26	; 0x3e
    18a2:	e6 97       	sbiw	r28, 0x36	; 54
    18a4:	e8 e6       	ldi	r30, 0x68	; 104
    18a6:	f0 e0       	ldi	r31, 0x00	; 0
    18a8:	e8 96       	adiw	r28, 0x38	; 56
    18aa:	ff af       	std	Y+63, r31	; 0x3f
    18ac:	ee af       	std	Y+62, r30	; 0x3e
    18ae:	e8 97       	sbiw	r28, 0x38	; 56
    18b0:	f3 e0       	ldi	r31, 0x03	; 3
    18b2:	e9 96       	adiw	r28, 0x39	; 57
    18b4:	ff af       	std	Y+63, r31	; 0x3f
    18b6:	e9 97       	sbiw	r28, 0x39	; 57
    18b8:	e8 96       	adiw	r28, 0x38	; 56
    18ba:	ae ad       	ldd	r26, Y+62	; 0x3e
    18bc:	bf ad       	ldd	r27, Y+63	; 0x3f
    18be:	e8 97       	sbiw	r28, 0x38	; 56
    18c0:	0c 90       	ld	r0, X
    18c2:	e8 96       	adiw	r28, 0x38	; 56
    18c4:	ee ad       	ldd	r30, Y+62	; 0x3e
    18c6:	ff ad       	ldd	r31, Y+63	; 0x3f
    18c8:	e8 97       	sbiw	r28, 0x38	; 56
    18ca:	31 96       	adiw	r30, 0x01	; 1
    18cc:	e8 96       	adiw	r28, 0x38	; 56
    18ce:	ff af       	std	Y+63, r31	; 0x3f
    18d0:	ee af       	std	Y+62, r30	; 0x3e
    18d2:	e8 97       	sbiw	r28, 0x38	; 56
    18d4:	e6 96       	adiw	r28, 0x36	; 54
    18d6:	ae ad       	ldd	r26, Y+62	; 0x3e
    18d8:	bf ad       	ldd	r27, Y+63	; 0x3f
    18da:	e6 97       	sbiw	r28, 0x36	; 54
    18dc:	0c 92       	st	X, r0
    18de:	e6 96       	adiw	r28, 0x36	; 54
    18e0:	ee ad       	ldd	r30, Y+62	; 0x3e
    18e2:	ff ad       	ldd	r31, Y+63	; 0x3f
    18e4:	e6 97       	sbiw	r28, 0x36	; 54
    18e6:	31 96       	adiw	r30, 0x01	; 1
    18e8:	e6 96       	adiw	r28, 0x36	; 54
    18ea:	ff af       	std	Y+63, r31	; 0x3f
    18ec:	ee af       	std	Y+62, r30	; 0x3e
    18ee:	e6 97       	sbiw	r28, 0x36	; 54
    18f0:	e9 96       	adiw	r28, 0x39	; 57
    18f2:	ff ad       	ldd	r31, Y+63	; 0x3f
    18f4:	e9 97       	sbiw	r28, 0x39	; 57
    18f6:	f1 50       	subi	r31, 0x01	; 1
    18f8:	e9 96       	adiw	r28, 0x39	; 57
    18fa:	ff af       	std	Y+63, r31	; 0x3f
    18fc:	e9 97       	sbiw	r28, 0x39	; 57
    18fe:	e9 96       	adiw	r28, 0x39	; 57
    1900:	8f ad       	ldd	r24, Y+63	; 0x3f
    1902:	e9 97       	sbiw	r28, 0x39	; 57
    1904:	88 23       	and	r24, r24
    1906:	c1 f6       	brne	.-80     	; 0x18b8 <main+0x346>

	LED_Type arr[]={LED0,LED1,LED2,LED3,LED4,LED5,LED6,LED7};
    1908:	88 e1       	ldi	r24, 0x18	; 24
    190a:	fe 01       	movw	r30, r28
    190c:	f9 96       	adiw	r30, 0x39	; 57
    190e:	df 01       	movw	r26, r30
    1910:	98 2f       	mov	r25, r24
    1912:	1d 92       	st	X+, r1
    1914:	9a 95       	dec	r25
    1916:	e9 f7       	brne	.-6      	; 0x1912 <main+0x3a0>
    1918:	de 01       	movw	r26, r28
    191a:	d9 96       	adiw	r26, 0x39	; 57
    191c:	eb 96       	adiw	r28, 0x3b	; 59
    191e:	bf af       	std	Y+63, r27	; 0x3f
    1920:	ae af       	std	Y+62, r26	; 0x3e
    1922:	eb 97       	sbiw	r28, 0x3b	; 59
    1924:	fe 01       	movw	r30, r28
    1926:	b1 96       	adiw	r30, 0x21	; 33
    1928:	ed 96       	adiw	r28, 0x3d	; 61
    192a:	ff af       	std	Y+63, r31	; 0x3f
    192c:	ee af       	std	Y+62, r30	; 0x3e
    192e:	ed 97       	sbiw	r28, 0x3d	; 61
    1930:	f3 e0       	ldi	r31, 0x03	; 3
    1932:	ee 96       	adiw	r28, 0x3e	; 62
    1934:	ff af       	std	Y+63, r31	; 0x3f
    1936:	ee 97       	sbiw	r28, 0x3e	; 62
    1938:	ed 96       	adiw	r28, 0x3d	; 61
    193a:	ae ad       	ldd	r26, Y+62	; 0x3e
    193c:	bf ad       	ldd	r27, Y+63	; 0x3f
    193e:	ed 97       	sbiw	r28, 0x3d	; 61
    1940:	0c 90       	ld	r0, X
    1942:	ed 96       	adiw	r28, 0x3d	; 61
    1944:	ee ad       	ldd	r30, Y+62	; 0x3e
    1946:	ff ad       	ldd	r31, Y+63	; 0x3f
    1948:	ed 97       	sbiw	r28, 0x3d	; 61
    194a:	31 96       	adiw	r30, 0x01	; 1
    194c:	ed 96       	adiw	r28, 0x3d	; 61
    194e:	ff af       	std	Y+63, r31	; 0x3f
    1950:	ee af       	std	Y+62, r30	; 0x3e
    1952:	ed 97       	sbiw	r28, 0x3d	; 61
    1954:	eb 96       	adiw	r28, 0x3b	; 59
    1956:	ae ad       	ldd	r26, Y+62	; 0x3e
    1958:	bf ad       	ldd	r27, Y+63	; 0x3f
    195a:	eb 97       	sbiw	r28, 0x3b	; 59
    195c:	0c 92       	st	X, r0
    195e:	eb 96       	adiw	r28, 0x3b	; 59
    1960:	ee ad       	ldd	r30, Y+62	; 0x3e
    1962:	ff ad       	ldd	r31, Y+63	; 0x3f
    1964:	eb 97       	sbiw	r28, 0x3b	; 59
    1966:	31 96       	adiw	r30, 0x01	; 1
    1968:	eb 96       	adiw	r28, 0x3b	; 59
    196a:	ff af       	std	Y+63, r31	; 0x3f
    196c:	ee af       	std	Y+62, r30	; 0x3e
    196e:	eb 97       	sbiw	r28, 0x3b	; 59
    1970:	ee 96       	adiw	r28, 0x3e	; 62
    1972:	ff ad       	ldd	r31, Y+63	; 0x3f
    1974:	ee 97       	sbiw	r28, 0x3e	; 62
    1976:	f1 50       	subi	r31, 0x01	; 1
    1978:	ee 96       	adiw	r28, 0x3e	; 62
    197a:	ff af       	std	Y+63, r31	; 0x3f
    197c:	ee 97       	sbiw	r28, 0x3e	; 62
    197e:	ee 96       	adiw	r28, 0x3e	; 62
    1980:	8f ad       	ldd	r24, Y+63	; 0x3f
    1982:	ee 97       	sbiw	r28, 0x3e	; 62
    1984:	88 23       	and	r24, r24
    1986:	c1 f6       	brne	.-80     	; 0x1938 <main+0x3c6>
    1988:	de 01       	movw	r26, r28
    198a:	dc 96       	adiw	r26, 0x3c	; 60
    198c:	c2 58       	subi	r28, 0x82	; 130
    198e:	df 4f       	sbci	r29, 0xFF	; 255
    1990:	b9 83       	std	Y+1, r27	; 0x01
    1992:	a8 83       	st	Y, r26
    1994:	ce 57       	subi	r28, 0x7E	; 126
    1996:	d0 40       	sbci	r29, 0x00	; 0
    1998:	fe 01       	movw	r30, r28
    199a:	b4 96       	adiw	r30, 0x24	; 36
    199c:	c0 58       	subi	r28, 0x80	; 128
    199e:	df 4f       	sbci	r29, 0xFF	; 255
    19a0:	f9 83       	std	Y+1, r31	; 0x01
    19a2:	e8 83       	st	Y, r30
    19a4:	c0 58       	subi	r28, 0x80	; 128
    19a6:	d0 40       	sbci	r29, 0x00	; 0
    19a8:	f3 e0       	ldi	r31, 0x03	; 3
    19aa:	ce 57       	subi	r28, 0x7E	; 126
    19ac:	df 4f       	sbci	r29, 0xFF	; 255
    19ae:	f8 83       	st	Y, r31
    19b0:	c2 58       	subi	r28, 0x82	; 130
    19b2:	d0 40       	sbci	r29, 0x00	; 0
    19b4:	c0 58       	subi	r28, 0x80	; 128
    19b6:	df 4f       	sbci	r29, 0xFF	; 255
    19b8:	a8 81       	ld	r26, Y
    19ba:	b9 81       	ldd	r27, Y+1	; 0x01
    19bc:	c0 58       	subi	r28, 0x80	; 128
    19be:	d0 40       	sbci	r29, 0x00	; 0
    19c0:	0c 90       	ld	r0, X
    19c2:	c0 58       	subi	r28, 0x80	; 128
    19c4:	df 4f       	sbci	r29, 0xFF	; 255
    19c6:	e8 81       	ld	r30, Y
    19c8:	f9 81       	ldd	r31, Y+1	; 0x01
    19ca:	c0 58       	subi	r28, 0x80	; 128
    19cc:	d0 40       	sbci	r29, 0x00	; 0
    19ce:	31 96       	adiw	r30, 0x01	; 1
    19d0:	c0 58       	subi	r28, 0x80	; 128
    19d2:	df 4f       	sbci	r29, 0xFF	; 255
    19d4:	f9 83       	std	Y+1, r31	; 0x01
    19d6:	e8 83       	st	Y, r30
    19d8:	c0 58       	subi	r28, 0x80	; 128
    19da:	d0 40       	sbci	r29, 0x00	; 0
    19dc:	c2 58       	subi	r28, 0x82	; 130
    19de:	df 4f       	sbci	r29, 0xFF	; 255
    19e0:	a8 81       	ld	r26, Y
    19e2:	b9 81       	ldd	r27, Y+1	; 0x01
    19e4:	ce 57       	subi	r28, 0x7E	; 126
    19e6:	d0 40       	sbci	r29, 0x00	; 0
    19e8:	0c 92       	st	X, r0
    19ea:	c2 58       	subi	r28, 0x82	; 130
    19ec:	df 4f       	sbci	r29, 0xFF	; 255
    19ee:	e8 81       	ld	r30, Y
    19f0:	f9 81       	ldd	r31, Y+1	; 0x01
    19f2:	ce 57       	subi	r28, 0x7E	; 126
    19f4:	d0 40       	sbci	r29, 0x00	; 0
    19f6:	31 96       	adiw	r30, 0x01	; 1
    19f8:	c2 58       	subi	r28, 0x82	; 130
    19fa:	df 4f       	sbci	r29, 0xFF	; 255
    19fc:	f9 83       	std	Y+1, r31	; 0x01
    19fe:	e8 83       	st	Y, r30
    1a00:	ce 57       	subi	r28, 0x7E	; 126
    1a02:	d0 40       	sbci	r29, 0x00	; 0
    1a04:	ce 57       	subi	r28, 0x7E	; 126
    1a06:	df 4f       	sbci	r29, 0xFF	; 255
    1a08:	f8 81       	ld	r31, Y
    1a0a:	c2 58       	subi	r28, 0x82	; 130
    1a0c:	d0 40       	sbci	r29, 0x00	; 0
    1a0e:	f1 50       	subi	r31, 0x01	; 1
    1a10:	ce 57       	subi	r28, 0x7E	; 126
    1a12:	df 4f       	sbci	r29, 0xFF	; 255
    1a14:	f8 83       	st	Y, r31
    1a16:	c2 58       	subi	r28, 0x82	; 130
    1a18:	d0 40       	sbci	r29, 0x00	; 0
    1a1a:	ce 57       	subi	r28, 0x7E	; 126
    1a1c:	df 4f       	sbci	r29, 0xFF	; 255
    1a1e:	88 81       	ld	r24, Y
    1a20:	c2 58       	subi	r28, 0x82	; 130
    1a22:	d0 40       	sbci	r29, 0x00	; 0
    1a24:	88 23       	and	r24, r24
    1a26:	31 f6       	brne	.-116    	; 0x19b4 <main+0x442>
    1a28:	de 01       	movw	r26, r28
    1a2a:	df 96       	adiw	r26, 0x3f	; 63
    1a2c:	cd 57       	subi	r28, 0x7D	; 125
    1a2e:	df 4f       	sbci	r29, 0xFF	; 255
    1a30:	b9 83       	std	Y+1, r27	; 0x01
    1a32:	a8 83       	st	Y, r26
    1a34:	c3 58       	subi	r28, 0x83	; 131
    1a36:	d0 40       	sbci	r29, 0x00	; 0
    1a38:	fe 01       	movw	r30, r28
    1a3a:	b7 96       	adiw	r30, 0x27	; 39
    1a3c:	cb 57       	subi	r28, 0x7B	; 123
    1a3e:	df 4f       	sbci	r29, 0xFF	; 255
    1a40:	f9 83       	std	Y+1, r31	; 0x01
    1a42:	e8 83       	st	Y, r30
    1a44:	c5 58       	subi	r28, 0x85	; 133
    1a46:	d0 40       	sbci	r29, 0x00	; 0
    1a48:	f3 e0       	ldi	r31, 0x03	; 3
    1a4a:	c9 57       	subi	r28, 0x79	; 121
    1a4c:	df 4f       	sbci	r29, 0xFF	; 255
    1a4e:	f8 83       	st	Y, r31
    1a50:	c7 58       	subi	r28, 0x87	; 135
    1a52:	d0 40       	sbci	r29, 0x00	; 0
    1a54:	cb 57       	subi	r28, 0x7B	; 123
    1a56:	df 4f       	sbci	r29, 0xFF	; 255
    1a58:	a8 81       	ld	r26, Y
    1a5a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a5c:	c5 58       	subi	r28, 0x85	; 133
    1a5e:	d0 40       	sbci	r29, 0x00	; 0
    1a60:	0c 90       	ld	r0, X
    1a62:	cb 57       	subi	r28, 0x7B	; 123
    1a64:	df 4f       	sbci	r29, 0xFF	; 255
    1a66:	e8 81       	ld	r30, Y
    1a68:	f9 81       	ldd	r31, Y+1	; 0x01
    1a6a:	c5 58       	subi	r28, 0x85	; 133
    1a6c:	d0 40       	sbci	r29, 0x00	; 0
    1a6e:	31 96       	adiw	r30, 0x01	; 1
    1a70:	cb 57       	subi	r28, 0x7B	; 123
    1a72:	df 4f       	sbci	r29, 0xFF	; 255
    1a74:	f9 83       	std	Y+1, r31	; 0x01
    1a76:	e8 83       	st	Y, r30
    1a78:	c5 58       	subi	r28, 0x85	; 133
    1a7a:	d0 40       	sbci	r29, 0x00	; 0
    1a7c:	cd 57       	subi	r28, 0x7D	; 125
    1a7e:	df 4f       	sbci	r29, 0xFF	; 255
    1a80:	a8 81       	ld	r26, Y
    1a82:	b9 81       	ldd	r27, Y+1	; 0x01
    1a84:	c3 58       	subi	r28, 0x83	; 131
    1a86:	d0 40       	sbci	r29, 0x00	; 0
    1a88:	0c 92       	st	X, r0
    1a8a:	cd 57       	subi	r28, 0x7D	; 125
    1a8c:	df 4f       	sbci	r29, 0xFF	; 255
    1a8e:	e8 81       	ld	r30, Y
    1a90:	f9 81       	ldd	r31, Y+1	; 0x01
    1a92:	c3 58       	subi	r28, 0x83	; 131
    1a94:	d0 40       	sbci	r29, 0x00	; 0
    1a96:	31 96       	adiw	r30, 0x01	; 1
    1a98:	cd 57       	subi	r28, 0x7D	; 125
    1a9a:	df 4f       	sbci	r29, 0xFF	; 255
    1a9c:	f9 83       	std	Y+1, r31	; 0x01
    1a9e:	e8 83       	st	Y, r30
    1aa0:	c3 58       	subi	r28, 0x83	; 131
    1aa2:	d0 40       	sbci	r29, 0x00	; 0
    1aa4:	c9 57       	subi	r28, 0x79	; 121
    1aa6:	df 4f       	sbci	r29, 0xFF	; 255
    1aa8:	f8 81       	ld	r31, Y
    1aaa:	c7 58       	subi	r28, 0x87	; 135
    1aac:	d0 40       	sbci	r29, 0x00	; 0
    1aae:	f1 50       	subi	r31, 0x01	; 1
    1ab0:	c9 57       	subi	r28, 0x79	; 121
    1ab2:	df 4f       	sbci	r29, 0xFF	; 255
    1ab4:	f8 83       	st	Y, r31
    1ab6:	c7 58       	subi	r28, 0x87	; 135
    1ab8:	d0 40       	sbci	r29, 0x00	; 0
    1aba:	c9 57       	subi	r28, 0x79	; 121
    1abc:	df 4f       	sbci	r29, 0xFF	; 255
    1abe:	88 81       	ld	r24, Y
    1ac0:	c7 58       	subi	r28, 0x87	; 135
    1ac2:	d0 40       	sbci	r29, 0x00	; 0
    1ac4:	88 23       	and	r24, r24
    1ac6:	31 f6       	brne	.-116    	; 0x1a54 <main+0x4e2>
    1ac8:	ce 01       	movw	r24, r28
    1aca:	8e 5b       	subi	r24, 0xBE	; 190
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	c8 57       	subi	r28, 0x78	; 120
    1ad0:	df 4f       	sbci	r29, 0xFF	; 255
    1ad2:	99 83       	std	Y+1, r25	; 0x01
    1ad4:	88 83       	st	Y, r24
    1ad6:	c8 58       	subi	r28, 0x88	; 136
    1ad8:	d0 40       	sbci	r29, 0x00	; 0
    1ada:	de 01       	movw	r26, r28
    1adc:	9a 96       	adiw	r26, 0x2a	; 42
    1ade:	c6 57       	subi	r28, 0x76	; 118
    1ae0:	df 4f       	sbci	r29, 0xFF	; 255
    1ae2:	b9 83       	std	Y+1, r27	; 0x01
    1ae4:	a8 83       	st	Y, r26
    1ae6:	ca 58       	subi	r28, 0x8A	; 138
    1ae8:	d0 40       	sbci	r29, 0x00	; 0
    1aea:	b3 e0       	ldi	r27, 0x03	; 3
    1aec:	c4 57       	subi	r28, 0x74	; 116
    1aee:	df 4f       	sbci	r29, 0xFF	; 255
    1af0:	b8 83       	st	Y, r27
    1af2:	cc 58       	subi	r28, 0x8C	; 140
    1af4:	d0 40       	sbci	r29, 0x00	; 0
    1af6:	c6 57       	subi	r28, 0x76	; 118
    1af8:	df 4f       	sbci	r29, 0xFF	; 255
    1afa:	e8 81       	ld	r30, Y
    1afc:	f9 81       	ldd	r31, Y+1	; 0x01
    1afe:	ca 58       	subi	r28, 0x8A	; 138
    1b00:	d0 40       	sbci	r29, 0x00	; 0
    1b02:	00 80       	ld	r0, Z
    1b04:	c6 57       	subi	r28, 0x76	; 118
    1b06:	df 4f       	sbci	r29, 0xFF	; 255
    1b08:	88 81       	ld	r24, Y
    1b0a:	99 81       	ldd	r25, Y+1	; 0x01
    1b0c:	ca 58       	subi	r28, 0x8A	; 138
    1b0e:	d0 40       	sbci	r29, 0x00	; 0
    1b10:	01 96       	adiw	r24, 0x01	; 1
    1b12:	c6 57       	subi	r28, 0x76	; 118
    1b14:	df 4f       	sbci	r29, 0xFF	; 255
    1b16:	99 83       	std	Y+1, r25	; 0x01
    1b18:	88 83       	st	Y, r24
    1b1a:	ca 58       	subi	r28, 0x8A	; 138
    1b1c:	d0 40       	sbci	r29, 0x00	; 0
    1b1e:	c8 57       	subi	r28, 0x78	; 120
    1b20:	df 4f       	sbci	r29, 0xFF	; 255
    1b22:	a8 81       	ld	r26, Y
    1b24:	b9 81       	ldd	r27, Y+1	; 0x01
    1b26:	c8 58       	subi	r28, 0x88	; 136
    1b28:	d0 40       	sbci	r29, 0x00	; 0
    1b2a:	0c 92       	st	X, r0
    1b2c:	c8 57       	subi	r28, 0x78	; 120
    1b2e:	df 4f       	sbci	r29, 0xFF	; 255
    1b30:	e8 81       	ld	r30, Y
    1b32:	f9 81       	ldd	r31, Y+1	; 0x01
    1b34:	c8 58       	subi	r28, 0x88	; 136
    1b36:	d0 40       	sbci	r29, 0x00	; 0
    1b38:	31 96       	adiw	r30, 0x01	; 1
    1b3a:	c8 57       	subi	r28, 0x78	; 120
    1b3c:	df 4f       	sbci	r29, 0xFF	; 255
    1b3e:	f9 83       	std	Y+1, r31	; 0x01
    1b40:	e8 83       	st	Y, r30
    1b42:	c8 58       	subi	r28, 0x88	; 136
    1b44:	d0 40       	sbci	r29, 0x00	; 0
    1b46:	c4 57       	subi	r28, 0x74	; 116
    1b48:	df 4f       	sbci	r29, 0xFF	; 255
    1b4a:	f8 81       	ld	r31, Y
    1b4c:	cc 58       	subi	r28, 0x8C	; 140
    1b4e:	d0 40       	sbci	r29, 0x00	; 0
    1b50:	f1 50       	subi	r31, 0x01	; 1
    1b52:	c4 57       	subi	r28, 0x74	; 116
    1b54:	df 4f       	sbci	r29, 0xFF	; 255
    1b56:	f8 83       	st	Y, r31
    1b58:	cc 58       	subi	r28, 0x8C	; 140
    1b5a:	d0 40       	sbci	r29, 0x00	; 0
    1b5c:	c4 57       	subi	r28, 0x74	; 116
    1b5e:	df 4f       	sbci	r29, 0xFF	; 255
    1b60:	88 81       	ld	r24, Y
    1b62:	cc 58       	subi	r28, 0x8C	; 140
    1b64:	d0 40       	sbci	r29, 0x00	; 0
    1b66:	88 23       	and	r24, r24
    1b68:	31 f6       	brne	.-116    	; 0x1af6 <main+0x584>
    1b6a:	ce 01       	movw	r24, r28
    1b6c:	8b 5b       	subi	r24, 0xBB	; 187
    1b6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b70:	c3 57       	subi	r28, 0x73	; 115
    1b72:	df 4f       	sbci	r29, 0xFF	; 255
    1b74:	99 83       	std	Y+1, r25	; 0x01
    1b76:	88 83       	st	Y, r24
    1b78:	cd 58       	subi	r28, 0x8D	; 141
    1b7a:	d0 40       	sbci	r29, 0x00	; 0
    1b7c:	de 01       	movw	r26, r28
    1b7e:	9d 96       	adiw	r26, 0x2d	; 45
    1b80:	c1 57       	subi	r28, 0x71	; 113
    1b82:	df 4f       	sbci	r29, 0xFF	; 255
    1b84:	b9 83       	std	Y+1, r27	; 0x01
    1b86:	a8 83       	st	Y, r26
    1b88:	cf 58       	subi	r28, 0x8F	; 143
    1b8a:	d0 40       	sbci	r29, 0x00	; 0
    1b8c:	b3 e0       	ldi	r27, 0x03	; 3
    1b8e:	cf 56       	subi	r28, 0x6F	; 111
    1b90:	df 4f       	sbci	r29, 0xFF	; 255
    1b92:	b8 83       	st	Y, r27
    1b94:	c1 59       	subi	r28, 0x91	; 145
    1b96:	d0 40       	sbci	r29, 0x00	; 0
    1b98:	c1 57       	subi	r28, 0x71	; 113
    1b9a:	df 4f       	sbci	r29, 0xFF	; 255
    1b9c:	e8 81       	ld	r30, Y
    1b9e:	f9 81       	ldd	r31, Y+1	; 0x01
    1ba0:	cf 58       	subi	r28, 0x8F	; 143
    1ba2:	d0 40       	sbci	r29, 0x00	; 0
    1ba4:	00 80       	ld	r0, Z
    1ba6:	c1 57       	subi	r28, 0x71	; 113
    1ba8:	df 4f       	sbci	r29, 0xFF	; 255
    1baa:	88 81       	ld	r24, Y
    1bac:	99 81       	ldd	r25, Y+1	; 0x01
    1bae:	cf 58       	subi	r28, 0x8F	; 143
    1bb0:	d0 40       	sbci	r29, 0x00	; 0
    1bb2:	01 96       	adiw	r24, 0x01	; 1
    1bb4:	c1 57       	subi	r28, 0x71	; 113
    1bb6:	df 4f       	sbci	r29, 0xFF	; 255
    1bb8:	99 83       	std	Y+1, r25	; 0x01
    1bba:	88 83       	st	Y, r24
    1bbc:	cf 58       	subi	r28, 0x8F	; 143
    1bbe:	d0 40       	sbci	r29, 0x00	; 0
    1bc0:	c3 57       	subi	r28, 0x73	; 115
    1bc2:	df 4f       	sbci	r29, 0xFF	; 255
    1bc4:	a8 81       	ld	r26, Y
    1bc6:	b9 81       	ldd	r27, Y+1	; 0x01
    1bc8:	cd 58       	subi	r28, 0x8D	; 141
    1bca:	d0 40       	sbci	r29, 0x00	; 0
    1bcc:	0c 92       	st	X, r0
    1bce:	c3 57       	subi	r28, 0x73	; 115
    1bd0:	df 4f       	sbci	r29, 0xFF	; 255
    1bd2:	e8 81       	ld	r30, Y
    1bd4:	f9 81       	ldd	r31, Y+1	; 0x01
    1bd6:	cd 58       	subi	r28, 0x8D	; 141
    1bd8:	d0 40       	sbci	r29, 0x00	; 0
    1bda:	31 96       	adiw	r30, 0x01	; 1
    1bdc:	c3 57       	subi	r28, 0x73	; 115
    1bde:	df 4f       	sbci	r29, 0xFF	; 255
    1be0:	f9 83       	std	Y+1, r31	; 0x01
    1be2:	e8 83       	st	Y, r30
    1be4:	cd 58       	subi	r28, 0x8D	; 141
    1be6:	d0 40       	sbci	r29, 0x00	; 0
    1be8:	cf 56       	subi	r28, 0x6F	; 111
    1bea:	df 4f       	sbci	r29, 0xFF	; 255
    1bec:	f8 81       	ld	r31, Y
    1bee:	c1 59       	subi	r28, 0x91	; 145
    1bf0:	d0 40       	sbci	r29, 0x00	; 0
    1bf2:	f1 50       	subi	r31, 0x01	; 1
    1bf4:	cf 56       	subi	r28, 0x6F	; 111
    1bf6:	df 4f       	sbci	r29, 0xFF	; 255
    1bf8:	f8 83       	st	Y, r31
    1bfa:	c1 59       	subi	r28, 0x91	; 145
    1bfc:	d0 40       	sbci	r29, 0x00	; 0
    1bfe:	cf 56       	subi	r28, 0x6F	; 111
    1c00:	df 4f       	sbci	r29, 0xFF	; 255
    1c02:	88 81       	ld	r24, Y
    1c04:	c1 59       	subi	r28, 0x91	; 145
    1c06:	d0 40       	sbci	r29, 0x00	; 0
    1c08:	88 23       	and	r24, r24
    1c0a:	31 f6       	brne	.-116    	; 0x1b98 <main+0x626>
    1c0c:	ce 01       	movw	r24, r28
    1c0e:	88 5b       	subi	r24, 0xB8	; 184
    1c10:	9f 4f       	sbci	r25, 0xFF	; 255
    1c12:	ce 56       	subi	r28, 0x6E	; 110
    1c14:	df 4f       	sbci	r29, 0xFF	; 255
    1c16:	99 83       	std	Y+1, r25	; 0x01
    1c18:	88 83       	st	Y, r24
    1c1a:	c2 59       	subi	r28, 0x92	; 146
    1c1c:	d0 40       	sbci	r29, 0x00	; 0
    1c1e:	de 01       	movw	r26, r28
    1c20:	d0 96       	adiw	r26, 0x30	; 48
    1c22:	cc 56       	subi	r28, 0x6C	; 108
    1c24:	df 4f       	sbci	r29, 0xFF	; 255
    1c26:	b9 83       	std	Y+1, r27	; 0x01
    1c28:	a8 83       	st	Y, r26
    1c2a:	c4 59       	subi	r28, 0x94	; 148
    1c2c:	d0 40       	sbci	r29, 0x00	; 0
    1c2e:	b3 e0       	ldi	r27, 0x03	; 3
    1c30:	ca 56       	subi	r28, 0x6A	; 106
    1c32:	df 4f       	sbci	r29, 0xFF	; 255
    1c34:	b8 83       	st	Y, r27
    1c36:	c6 59       	subi	r28, 0x96	; 150
    1c38:	d0 40       	sbci	r29, 0x00	; 0
    1c3a:	cc 56       	subi	r28, 0x6C	; 108
    1c3c:	df 4f       	sbci	r29, 0xFF	; 255
    1c3e:	e8 81       	ld	r30, Y
    1c40:	f9 81       	ldd	r31, Y+1	; 0x01
    1c42:	c4 59       	subi	r28, 0x94	; 148
    1c44:	d0 40       	sbci	r29, 0x00	; 0
    1c46:	00 80       	ld	r0, Z
    1c48:	cc 56       	subi	r28, 0x6C	; 108
    1c4a:	df 4f       	sbci	r29, 0xFF	; 255
    1c4c:	88 81       	ld	r24, Y
    1c4e:	99 81       	ldd	r25, Y+1	; 0x01
    1c50:	c4 59       	subi	r28, 0x94	; 148
    1c52:	d0 40       	sbci	r29, 0x00	; 0
    1c54:	01 96       	adiw	r24, 0x01	; 1
    1c56:	cc 56       	subi	r28, 0x6C	; 108
    1c58:	df 4f       	sbci	r29, 0xFF	; 255
    1c5a:	99 83       	std	Y+1, r25	; 0x01
    1c5c:	88 83       	st	Y, r24
    1c5e:	c4 59       	subi	r28, 0x94	; 148
    1c60:	d0 40       	sbci	r29, 0x00	; 0
    1c62:	ce 56       	subi	r28, 0x6E	; 110
    1c64:	df 4f       	sbci	r29, 0xFF	; 255
    1c66:	a8 81       	ld	r26, Y
    1c68:	b9 81       	ldd	r27, Y+1	; 0x01
    1c6a:	c2 59       	subi	r28, 0x92	; 146
    1c6c:	d0 40       	sbci	r29, 0x00	; 0
    1c6e:	0c 92       	st	X, r0
    1c70:	ce 56       	subi	r28, 0x6E	; 110
    1c72:	df 4f       	sbci	r29, 0xFF	; 255
    1c74:	e8 81       	ld	r30, Y
    1c76:	f9 81       	ldd	r31, Y+1	; 0x01
    1c78:	c2 59       	subi	r28, 0x92	; 146
    1c7a:	d0 40       	sbci	r29, 0x00	; 0
    1c7c:	31 96       	adiw	r30, 0x01	; 1
    1c7e:	ce 56       	subi	r28, 0x6E	; 110
    1c80:	df 4f       	sbci	r29, 0xFF	; 255
    1c82:	f9 83       	std	Y+1, r31	; 0x01
    1c84:	e8 83       	st	Y, r30
    1c86:	c2 59       	subi	r28, 0x92	; 146
    1c88:	d0 40       	sbci	r29, 0x00	; 0
    1c8a:	ca 56       	subi	r28, 0x6A	; 106
    1c8c:	df 4f       	sbci	r29, 0xFF	; 255
    1c8e:	f8 81       	ld	r31, Y
    1c90:	c6 59       	subi	r28, 0x96	; 150
    1c92:	d0 40       	sbci	r29, 0x00	; 0
    1c94:	f1 50       	subi	r31, 0x01	; 1
    1c96:	ca 56       	subi	r28, 0x6A	; 106
    1c98:	df 4f       	sbci	r29, 0xFF	; 255
    1c9a:	f8 83       	st	Y, r31
    1c9c:	c6 59       	subi	r28, 0x96	; 150
    1c9e:	d0 40       	sbci	r29, 0x00	; 0
    1ca0:	ca 56       	subi	r28, 0x6A	; 106
    1ca2:	df 4f       	sbci	r29, 0xFF	; 255
    1ca4:	88 81       	ld	r24, Y
    1ca6:	c6 59       	subi	r28, 0x96	; 150
    1ca8:	d0 40       	sbci	r29, 0x00	; 0
    1caa:	88 23       	and	r24, r24
    1cac:	31 f6       	brne	.-116    	; 0x1c3a <main+0x6c8>
    1cae:	ce 01       	movw	r24, r28
    1cb0:	85 5b       	subi	r24, 0xB5	; 181
    1cb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cb4:	c9 56       	subi	r28, 0x69	; 105
    1cb6:	df 4f       	sbci	r29, 0xFF	; 255
    1cb8:	99 83       	std	Y+1, r25	; 0x01
    1cba:	88 83       	st	Y, r24
    1cbc:	c7 59       	subi	r28, 0x97	; 151
    1cbe:	d0 40       	sbci	r29, 0x00	; 0
    1cc0:	de 01       	movw	r26, r28
    1cc2:	d3 96       	adiw	r26, 0x33	; 51
    1cc4:	c7 56       	subi	r28, 0x67	; 103
    1cc6:	df 4f       	sbci	r29, 0xFF	; 255
    1cc8:	b9 83       	std	Y+1, r27	; 0x01
    1cca:	a8 83       	st	Y, r26
    1ccc:	c9 59       	subi	r28, 0x99	; 153
    1cce:	d0 40       	sbci	r29, 0x00	; 0
    1cd0:	b3 e0       	ldi	r27, 0x03	; 3
    1cd2:	c5 56       	subi	r28, 0x65	; 101
    1cd4:	df 4f       	sbci	r29, 0xFF	; 255
    1cd6:	b8 83       	st	Y, r27
    1cd8:	cb 59       	subi	r28, 0x9B	; 155
    1cda:	d0 40       	sbci	r29, 0x00	; 0
    1cdc:	c7 56       	subi	r28, 0x67	; 103
    1cde:	df 4f       	sbci	r29, 0xFF	; 255
    1ce0:	e8 81       	ld	r30, Y
    1ce2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ce4:	c9 59       	subi	r28, 0x99	; 153
    1ce6:	d0 40       	sbci	r29, 0x00	; 0
    1ce8:	00 80       	ld	r0, Z
    1cea:	c7 56       	subi	r28, 0x67	; 103
    1cec:	df 4f       	sbci	r29, 0xFF	; 255
    1cee:	88 81       	ld	r24, Y
    1cf0:	99 81       	ldd	r25, Y+1	; 0x01
    1cf2:	c9 59       	subi	r28, 0x99	; 153
    1cf4:	d0 40       	sbci	r29, 0x00	; 0
    1cf6:	01 96       	adiw	r24, 0x01	; 1
    1cf8:	c7 56       	subi	r28, 0x67	; 103
    1cfa:	df 4f       	sbci	r29, 0xFF	; 255
    1cfc:	99 83       	std	Y+1, r25	; 0x01
    1cfe:	88 83       	st	Y, r24
    1d00:	c9 59       	subi	r28, 0x99	; 153
    1d02:	d0 40       	sbci	r29, 0x00	; 0
    1d04:	c9 56       	subi	r28, 0x69	; 105
    1d06:	df 4f       	sbci	r29, 0xFF	; 255
    1d08:	a8 81       	ld	r26, Y
    1d0a:	b9 81       	ldd	r27, Y+1	; 0x01
    1d0c:	c7 59       	subi	r28, 0x97	; 151
    1d0e:	d0 40       	sbci	r29, 0x00	; 0
    1d10:	0c 92       	st	X, r0
    1d12:	c9 56       	subi	r28, 0x69	; 105
    1d14:	df 4f       	sbci	r29, 0xFF	; 255
    1d16:	e8 81       	ld	r30, Y
    1d18:	f9 81       	ldd	r31, Y+1	; 0x01
    1d1a:	c7 59       	subi	r28, 0x97	; 151
    1d1c:	d0 40       	sbci	r29, 0x00	; 0
    1d1e:	31 96       	adiw	r30, 0x01	; 1
    1d20:	c9 56       	subi	r28, 0x69	; 105
    1d22:	df 4f       	sbci	r29, 0xFF	; 255
    1d24:	f9 83       	std	Y+1, r31	; 0x01
    1d26:	e8 83       	st	Y, r30
    1d28:	c7 59       	subi	r28, 0x97	; 151
    1d2a:	d0 40       	sbci	r29, 0x00	; 0
    1d2c:	c5 56       	subi	r28, 0x65	; 101
    1d2e:	df 4f       	sbci	r29, 0xFF	; 255
    1d30:	f8 81       	ld	r31, Y
    1d32:	cb 59       	subi	r28, 0x9B	; 155
    1d34:	d0 40       	sbci	r29, 0x00	; 0
    1d36:	f1 50       	subi	r31, 0x01	; 1
    1d38:	c5 56       	subi	r28, 0x65	; 101
    1d3a:	df 4f       	sbci	r29, 0xFF	; 255
    1d3c:	f8 83       	st	Y, r31
    1d3e:	cb 59       	subi	r28, 0x9B	; 155
    1d40:	d0 40       	sbci	r29, 0x00	; 0
    1d42:	c5 56       	subi	r28, 0x65	; 101
    1d44:	df 4f       	sbci	r29, 0xFF	; 255
    1d46:	88 81       	ld	r24, Y
    1d48:	cb 59       	subi	r28, 0x9B	; 155
    1d4a:	d0 40       	sbci	r29, 0x00	; 0
    1d4c:	88 23       	and	r24, r24
    1d4e:	31 f6       	brne	.-116    	; 0x1cdc <main+0x76a>
    1d50:	ce 01       	movw	r24, r28
    1d52:	82 5b       	subi	r24, 0xB2	; 178
    1d54:	9f 4f       	sbci	r25, 0xFF	; 255
    1d56:	c4 56       	subi	r28, 0x64	; 100
    1d58:	df 4f       	sbci	r29, 0xFF	; 255
    1d5a:	99 83       	std	Y+1, r25	; 0x01
    1d5c:	88 83       	st	Y, r24
    1d5e:	cc 59       	subi	r28, 0x9C	; 156
    1d60:	d0 40       	sbci	r29, 0x00	; 0
    1d62:	de 01       	movw	r26, r28
    1d64:	d6 96       	adiw	r26, 0x36	; 54
    1d66:	c2 56       	subi	r28, 0x62	; 98
    1d68:	df 4f       	sbci	r29, 0xFF	; 255
    1d6a:	b9 83       	std	Y+1, r27	; 0x01
    1d6c:	a8 83       	st	Y, r26
    1d6e:	ce 59       	subi	r28, 0x9E	; 158
    1d70:	d0 40       	sbci	r29, 0x00	; 0
    1d72:	b3 e0       	ldi	r27, 0x03	; 3
    1d74:	c0 56       	subi	r28, 0x60	; 96
    1d76:	df 4f       	sbci	r29, 0xFF	; 255
    1d78:	b8 83       	st	Y, r27
    1d7a:	c0 5a       	subi	r28, 0xA0	; 160
    1d7c:	d0 40       	sbci	r29, 0x00	; 0
    1d7e:	c2 56       	subi	r28, 0x62	; 98
    1d80:	df 4f       	sbci	r29, 0xFF	; 255
    1d82:	e8 81       	ld	r30, Y
    1d84:	f9 81       	ldd	r31, Y+1	; 0x01
    1d86:	ce 59       	subi	r28, 0x9E	; 158
    1d88:	d0 40       	sbci	r29, 0x00	; 0
    1d8a:	00 80       	ld	r0, Z
    1d8c:	c2 56       	subi	r28, 0x62	; 98
    1d8e:	df 4f       	sbci	r29, 0xFF	; 255
    1d90:	88 81       	ld	r24, Y
    1d92:	99 81       	ldd	r25, Y+1	; 0x01
    1d94:	ce 59       	subi	r28, 0x9E	; 158
    1d96:	d0 40       	sbci	r29, 0x00	; 0
    1d98:	01 96       	adiw	r24, 0x01	; 1
    1d9a:	c2 56       	subi	r28, 0x62	; 98
    1d9c:	df 4f       	sbci	r29, 0xFF	; 255
    1d9e:	99 83       	std	Y+1, r25	; 0x01
    1da0:	88 83       	st	Y, r24
    1da2:	ce 59       	subi	r28, 0x9E	; 158
    1da4:	d0 40       	sbci	r29, 0x00	; 0
    1da6:	c4 56       	subi	r28, 0x64	; 100
    1da8:	df 4f       	sbci	r29, 0xFF	; 255
    1daa:	a8 81       	ld	r26, Y
    1dac:	b9 81       	ldd	r27, Y+1	; 0x01
    1dae:	cc 59       	subi	r28, 0x9C	; 156
    1db0:	d0 40       	sbci	r29, 0x00	; 0
    1db2:	0c 92       	st	X, r0
    1db4:	c4 56       	subi	r28, 0x64	; 100
    1db6:	df 4f       	sbci	r29, 0xFF	; 255
    1db8:	e8 81       	ld	r30, Y
    1dba:	f9 81       	ldd	r31, Y+1	; 0x01
    1dbc:	cc 59       	subi	r28, 0x9C	; 156
    1dbe:	d0 40       	sbci	r29, 0x00	; 0
    1dc0:	31 96       	adiw	r30, 0x01	; 1
    1dc2:	c4 56       	subi	r28, 0x64	; 100
    1dc4:	df 4f       	sbci	r29, 0xFF	; 255
    1dc6:	f9 83       	std	Y+1, r31	; 0x01
    1dc8:	e8 83       	st	Y, r30
    1dca:	cc 59       	subi	r28, 0x9C	; 156
    1dcc:	d0 40       	sbci	r29, 0x00	; 0
    1dce:	c0 56       	subi	r28, 0x60	; 96
    1dd0:	df 4f       	sbci	r29, 0xFF	; 255
    1dd2:	f8 81       	ld	r31, Y
    1dd4:	c0 5a       	subi	r28, 0xA0	; 160
    1dd6:	d0 40       	sbci	r29, 0x00	; 0
    1dd8:	f1 50       	subi	r31, 0x01	; 1
    1dda:	c0 56       	subi	r28, 0x60	; 96
    1ddc:	df 4f       	sbci	r29, 0xFF	; 255
    1dde:	f8 83       	st	Y, r31
    1de0:	c0 5a       	subi	r28, 0xA0	; 160
    1de2:	d0 40       	sbci	r29, 0x00	; 0
    1de4:	c0 56       	subi	r28, 0x60	; 96
    1de6:	df 4f       	sbci	r29, 0xFF	; 255
    1de8:	88 81       	ld	r24, Y
    1dea:	c0 5a       	subi	r28, 0xA0	; 160
    1dec:	d0 40       	sbci	r29, 0x00	; 0
    1dee:	88 23       	and	r24, r24
    1df0:	31 f6       	brne	.-116    	; 0x1d7e <main+0x80c>

	for(int i=0;i<=7;i++)
    1df2:	1e 8e       	std	Y+30, r1	; 0x1e
    1df4:	1d 8e       	std	Y+29, r1	; 0x1d
    1df6:	18 c0       	rjmp	.+48     	; 0x1e28 <main+0x8b6>
	{
		LED_voidInit(arr[i]);
    1df8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1dfa:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1dfc:	c9 01       	movw	r24, r18
    1dfe:	88 0f       	add	r24, r24
    1e00:	99 1f       	adc	r25, r25
    1e02:	82 0f       	add	r24, r18
    1e04:	93 1f       	adc	r25, r19
    1e06:	9e 01       	movw	r18, r28
    1e08:	2f 5f       	subi	r18, 0xFF	; 255
    1e0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e0c:	82 0f       	add	r24, r18
    1e0e:	93 1f       	adc	r25, r19
    1e10:	fc 01       	movw	r30, r24
    1e12:	f8 96       	adiw	r30, 0x38	; 56
    1e14:	60 81       	ld	r22, Z
    1e16:	71 81       	ldd	r23, Z+1	; 0x01
    1e18:	82 81       	ldd	r24, Z+2	; 0x02
    1e1a:	0e 94 4c 0a 	call	0x1498	; 0x1498 <LED_voidInit>
	LED_Type LED6 = {LED_PORTA,LED_PIN6,ACTIVE_HIGH};
	LED_Type LED7 = {LED_PORTA,LED_PIN7,ACTIVE_HIGH};

	LED_Type arr[]={LED0,LED1,LED2,LED3,LED4,LED5,LED6,LED7};

	for(int i=0;i<=7;i++)
    1e1e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e20:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e22:	01 96       	adiw	r24, 0x01	; 1
    1e24:	9e 8f       	std	Y+30, r25	; 0x1e
    1e26:	8d 8f       	std	Y+29, r24	; 0x1d
    1e28:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e2a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e2c:	88 30       	cpi	r24, 0x08	; 8
    1e2e:	91 05       	cpc	r25, r1
    1e30:	1c f3       	brlt	.-58     	; 0x1df8 <main+0x886>
	}

	int led;
	while(1)
	{
		for (led=0;led<=7;led++)
    1e32:	18 a2       	std	Y+32, r1	; 0x20
    1e34:	1f 8e       	std	Y+31, r1	; 0x1f
    1e36:	9d c0       	rjmp	.+314    	; 0x1f72 <main+0xa00>
			{
				LED_voidToggle(arr[led]);
    1e38:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1e3a:	38 a1       	ldd	r19, Y+32	; 0x20
    1e3c:	c9 01       	movw	r24, r18
    1e3e:	88 0f       	add	r24, r24
    1e40:	99 1f       	adc	r25, r25
    1e42:	82 0f       	add	r24, r18
    1e44:	93 1f       	adc	r25, r19
    1e46:	9e 01       	movw	r18, r28
    1e48:	2f 5f       	subi	r18, 0xFF	; 255
    1e4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e4c:	82 0f       	add	r24, r18
    1e4e:	93 1f       	adc	r25, r19
    1e50:	fc 01       	movw	r30, r24
    1e52:	f8 96       	adiw	r30, 0x38	; 56
    1e54:	60 81       	ld	r22, Z
    1e56:	71 81       	ldd	r23, Z+1	; 0x01
    1e58:	82 81       	ldd	r24, Z+2	; 0x02
    1e5a:	0e 94 a5 0a 	call	0x154a	; 0x154a <LED_voidToggle>
    1e5e:	80 e0       	ldi	r24, 0x00	; 0
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	aa e7       	ldi	r26, 0x7A	; 122
    1e64:	b3 e4       	ldi	r27, 0x43	; 67
    1e66:	89 8f       	std	Y+25, r24	; 0x19
    1e68:	9a 8f       	std	Y+26, r25	; 0x1a
    1e6a:	ab 8f       	std	Y+27, r26	; 0x1b
    1e6c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e6e:	69 8d       	ldd	r22, Y+25	; 0x19
    1e70:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e72:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e74:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e76:	20 e0       	ldi	r18, 0x00	; 0
    1e78:	30 e0       	ldi	r19, 0x00	; 0
    1e7a:	4a ef       	ldi	r20, 0xFA	; 250
    1e7c:	54 e4       	ldi	r21, 0x44	; 68
    1e7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e82:	dc 01       	movw	r26, r24
    1e84:	cb 01       	movw	r24, r22
    1e86:	8d 8b       	std	Y+21, r24	; 0x15
    1e88:	9e 8b       	std	Y+22, r25	; 0x16
    1e8a:	af 8b       	std	Y+23, r26	; 0x17
    1e8c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e8e:	6d 89       	ldd	r22, Y+21	; 0x15
    1e90:	7e 89       	ldd	r23, Y+22	; 0x16
    1e92:	8f 89       	ldd	r24, Y+23	; 0x17
    1e94:	98 8d       	ldd	r25, Y+24	; 0x18
    1e96:	20 e0       	ldi	r18, 0x00	; 0
    1e98:	30 e0       	ldi	r19, 0x00	; 0
    1e9a:	40 e8       	ldi	r20, 0x80	; 128
    1e9c:	5f e3       	ldi	r21, 0x3F	; 63
    1e9e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ea2:	88 23       	and	r24, r24
    1ea4:	2c f4       	brge	.+10     	; 0x1eb0 <main+0x93e>
		__ticks = 1;
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	9c 8b       	std	Y+20, r25	; 0x14
    1eac:	8b 8b       	std	Y+19, r24	; 0x13
    1eae:	3f c0       	rjmp	.+126    	; 0x1f2e <main+0x9bc>
	else if (__tmp > 65535)
    1eb0:	6d 89       	ldd	r22, Y+21	; 0x15
    1eb2:	7e 89       	ldd	r23, Y+22	; 0x16
    1eb4:	8f 89       	ldd	r24, Y+23	; 0x17
    1eb6:	98 8d       	ldd	r25, Y+24	; 0x18
    1eb8:	20 e0       	ldi	r18, 0x00	; 0
    1eba:	3f ef       	ldi	r19, 0xFF	; 255
    1ebc:	4f e7       	ldi	r20, 0x7F	; 127
    1ebe:	57 e4       	ldi	r21, 0x47	; 71
    1ec0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ec4:	18 16       	cp	r1, r24
    1ec6:	4c f5       	brge	.+82     	; 0x1f1a <main+0x9a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ec8:	69 8d       	ldd	r22, Y+25	; 0x19
    1eca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ecc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ece:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ed0:	20 e0       	ldi	r18, 0x00	; 0
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	40 e2       	ldi	r20, 0x20	; 32
    1ed6:	51 e4       	ldi	r21, 0x41	; 65
    1ed8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1edc:	dc 01       	movw	r26, r24
    1ede:	cb 01       	movw	r24, r22
    1ee0:	bc 01       	movw	r22, r24
    1ee2:	cd 01       	movw	r24, r26
    1ee4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ee8:	dc 01       	movw	r26, r24
    1eea:	cb 01       	movw	r24, r22
    1eec:	9c 8b       	std	Y+20, r25	; 0x14
    1eee:	8b 8b       	std	Y+19, r24	; 0x13
    1ef0:	0f c0       	rjmp	.+30     	; 0x1f10 <main+0x99e>
    1ef2:	88 ec       	ldi	r24, 0xC8	; 200
    1ef4:	90 e0       	ldi	r25, 0x00	; 0
    1ef6:	9a 8b       	std	Y+18, r25	; 0x12
    1ef8:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1efa:	89 89       	ldd	r24, Y+17	; 0x11
    1efc:	9a 89       	ldd	r25, Y+18	; 0x12
    1efe:	01 97       	sbiw	r24, 0x01	; 1
    1f00:	f1 f7       	brne	.-4      	; 0x1efe <main+0x98c>
    1f02:	9a 8b       	std	Y+18, r25	; 0x12
    1f04:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f06:	8b 89       	ldd	r24, Y+19	; 0x13
    1f08:	9c 89       	ldd	r25, Y+20	; 0x14
    1f0a:	01 97       	sbiw	r24, 0x01	; 1
    1f0c:	9c 8b       	std	Y+20, r25	; 0x14
    1f0e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f10:	8b 89       	ldd	r24, Y+19	; 0x13
    1f12:	9c 89       	ldd	r25, Y+20	; 0x14
    1f14:	00 97       	sbiw	r24, 0x00	; 0
    1f16:	69 f7       	brne	.-38     	; 0x1ef2 <main+0x980>
    1f18:	14 c0       	rjmp	.+40     	; 0x1f42 <main+0x9d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f1a:	6d 89       	ldd	r22, Y+21	; 0x15
    1f1c:	7e 89       	ldd	r23, Y+22	; 0x16
    1f1e:	8f 89       	ldd	r24, Y+23	; 0x17
    1f20:	98 8d       	ldd	r25, Y+24	; 0x18
    1f22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f26:	dc 01       	movw	r26, r24
    1f28:	cb 01       	movw	r24, r22
    1f2a:	9c 8b       	std	Y+20, r25	; 0x14
    1f2c:	8b 8b       	std	Y+19, r24	; 0x13
    1f2e:	8b 89       	ldd	r24, Y+19	; 0x13
    1f30:	9c 89       	ldd	r25, Y+20	; 0x14
    1f32:	98 8b       	std	Y+16, r25	; 0x10
    1f34:	8f 87       	std	Y+15, r24	; 0x0f
    1f36:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f38:	98 89       	ldd	r25, Y+16	; 0x10
    1f3a:	01 97       	sbiw	r24, 0x01	; 1
    1f3c:	f1 f7       	brne	.-4      	; 0x1f3a <main+0x9c8>
    1f3e:	98 8b       	std	Y+16, r25	; 0x10
    1f40:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(250);
				LED_voidToggle(arr[led]);
    1f42:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1f44:	38 a1       	ldd	r19, Y+32	; 0x20
    1f46:	c9 01       	movw	r24, r18
    1f48:	88 0f       	add	r24, r24
    1f4a:	99 1f       	adc	r25, r25
    1f4c:	82 0f       	add	r24, r18
    1f4e:	93 1f       	adc	r25, r19
    1f50:	9e 01       	movw	r18, r28
    1f52:	2f 5f       	subi	r18, 0xFF	; 255
    1f54:	3f 4f       	sbci	r19, 0xFF	; 255
    1f56:	82 0f       	add	r24, r18
    1f58:	93 1f       	adc	r25, r19
    1f5a:	fc 01       	movw	r30, r24
    1f5c:	f8 96       	adiw	r30, 0x38	; 56
    1f5e:	60 81       	ld	r22, Z
    1f60:	71 81       	ldd	r23, Z+1	; 0x01
    1f62:	82 81       	ldd	r24, Z+2	; 0x02
    1f64:	0e 94 a5 0a 	call	0x154a	; 0x154a <LED_voidToggle>
	}

	int led;
	while(1)
	{
		for (led=0;led<=7;led++)
    1f68:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1f6a:	98 a1       	ldd	r25, Y+32	; 0x20
    1f6c:	01 96       	adiw	r24, 0x01	; 1
    1f6e:	98 a3       	std	Y+32, r25	; 0x20
    1f70:	8f 8f       	std	Y+31, r24	; 0x1f
    1f72:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1f74:	98 a1       	ldd	r25, Y+32	; 0x20
    1f76:	88 30       	cpi	r24, 0x08	; 8
    1f78:	91 05       	cpc	r25, r1
    1f7a:	0c f4       	brge	.+2      	; 0x1f7e <main+0xa0c>
    1f7c:	5d cf       	rjmp	.-326    	; 0x1e38 <main+0x8c6>
			{
				LED_voidToggle(arr[led]);
				_delay_ms(250);
				LED_voidToggle(arr[led]);
			}
		for (led=7;led>=0;led--)
    1f7e:	87 e0       	ldi	r24, 0x07	; 7
    1f80:	90 e0       	ldi	r25, 0x00	; 0
    1f82:	98 a3       	std	Y+32, r25	; 0x20
    1f84:	8f 8f       	std	Y+31, r24	; 0x1f
    1f86:	9d c0       	rjmp	.+314    	; 0x20c2 <main+0xb50>
			{
				LED_voidToggle(arr[led]);
    1f88:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1f8a:	38 a1       	ldd	r19, Y+32	; 0x20
    1f8c:	c9 01       	movw	r24, r18
    1f8e:	88 0f       	add	r24, r24
    1f90:	99 1f       	adc	r25, r25
    1f92:	82 0f       	add	r24, r18
    1f94:	93 1f       	adc	r25, r19
    1f96:	9e 01       	movw	r18, r28
    1f98:	2f 5f       	subi	r18, 0xFF	; 255
    1f9a:	3f 4f       	sbci	r19, 0xFF	; 255
    1f9c:	82 0f       	add	r24, r18
    1f9e:	93 1f       	adc	r25, r19
    1fa0:	fc 01       	movw	r30, r24
    1fa2:	f8 96       	adiw	r30, 0x38	; 56
    1fa4:	60 81       	ld	r22, Z
    1fa6:	71 81       	ldd	r23, Z+1	; 0x01
    1fa8:	82 81       	ldd	r24, Z+2	; 0x02
    1faa:	0e 94 a5 0a 	call	0x154a	; 0x154a <LED_voidToggle>
    1fae:	80 e0       	ldi	r24, 0x00	; 0
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	aa e7       	ldi	r26, 0x7A	; 122
    1fb4:	b3 e4       	ldi	r27, 0x43	; 67
    1fb6:	8b 87       	std	Y+11, r24	; 0x0b
    1fb8:	9c 87       	std	Y+12, r25	; 0x0c
    1fba:	ad 87       	std	Y+13, r26	; 0x0d
    1fbc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fbe:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fc0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fc2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fc4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fc6:	20 e0       	ldi	r18, 0x00	; 0
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	4a ef       	ldi	r20, 0xFA	; 250
    1fcc:	54 e4       	ldi	r21, 0x44	; 68
    1fce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fd2:	dc 01       	movw	r26, r24
    1fd4:	cb 01       	movw	r24, r22
    1fd6:	8f 83       	std	Y+7, r24	; 0x07
    1fd8:	98 87       	std	Y+8, r25	; 0x08
    1fda:	a9 87       	std	Y+9, r26	; 0x09
    1fdc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1fde:	6f 81       	ldd	r22, Y+7	; 0x07
    1fe0:	78 85       	ldd	r23, Y+8	; 0x08
    1fe2:	89 85       	ldd	r24, Y+9	; 0x09
    1fe4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fe6:	20 e0       	ldi	r18, 0x00	; 0
    1fe8:	30 e0       	ldi	r19, 0x00	; 0
    1fea:	40 e8       	ldi	r20, 0x80	; 128
    1fec:	5f e3       	ldi	r21, 0x3F	; 63
    1fee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ff2:	88 23       	and	r24, r24
    1ff4:	2c f4       	brge	.+10     	; 0x2000 <main+0xa8e>
		__ticks = 1;
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	9e 83       	std	Y+6, r25	; 0x06
    1ffc:	8d 83       	std	Y+5, r24	; 0x05
    1ffe:	3f c0       	rjmp	.+126    	; 0x207e <main+0xb0c>
	else if (__tmp > 65535)
    2000:	6f 81       	ldd	r22, Y+7	; 0x07
    2002:	78 85       	ldd	r23, Y+8	; 0x08
    2004:	89 85       	ldd	r24, Y+9	; 0x09
    2006:	9a 85       	ldd	r25, Y+10	; 0x0a
    2008:	20 e0       	ldi	r18, 0x00	; 0
    200a:	3f ef       	ldi	r19, 0xFF	; 255
    200c:	4f e7       	ldi	r20, 0x7F	; 127
    200e:	57 e4       	ldi	r21, 0x47	; 71
    2010:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2014:	18 16       	cp	r1, r24
    2016:	4c f5       	brge	.+82     	; 0x206a <main+0xaf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2018:	6b 85       	ldd	r22, Y+11	; 0x0b
    201a:	7c 85       	ldd	r23, Y+12	; 0x0c
    201c:	8d 85       	ldd	r24, Y+13	; 0x0d
    201e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2020:	20 e0       	ldi	r18, 0x00	; 0
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	40 e2       	ldi	r20, 0x20	; 32
    2026:	51 e4       	ldi	r21, 0x41	; 65
    2028:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    202c:	dc 01       	movw	r26, r24
    202e:	cb 01       	movw	r24, r22
    2030:	bc 01       	movw	r22, r24
    2032:	cd 01       	movw	r24, r26
    2034:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2038:	dc 01       	movw	r26, r24
    203a:	cb 01       	movw	r24, r22
    203c:	9e 83       	std	Y+6, r25	; 0x06
    203e:	8d 83       	std	Y+5, r24	; 0x05
    2040:	0f c0       	rjmp	.+30     	; 0x2060 <main+0xaee>
    2042:	88 ec       	ldi	r24, 0xC8	; 200
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	9c 83       	std	Y+4, r25	; 0x04
    2048:	8b 83       	std	Y+3, r24	; 0x03
    204a:	8b 81       	ldd	r24, Y+3	; 0x03
    204c:	9c 81       	ldd	r25, Y+4	; 0x04
    204e:	01 97       	sbiw	r24, 0x01	; 1
    2050:	f1 f7       	brne	.-4      	; 0x204e <main+0xadc>
    2052:	9c 83       	std	Y+4, r25	; 0x04
    2054:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2056:	8d 81       	ldd	r24, Y+5	; 0x05
    2058:	9e 81       	ldd	r25, Y+6	; 0x06
    205a:	01 97       	sbiw	r24, 0x01	; 1
    205c:	9e 83       	std	Y+6, r25	; 0x06
    205e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2060:	8d 81       	ldd	r24, Y+5	; 0x05
    2062:	9e 81       	ldd	r25, Y+6	; 0x06
    2064:	00 97       	sbiw	r24, 0x00	; 0
    2066:	69 f7       	brne	.-38     	; 0x2042 <main+0xad0>
    2068:	14 c0       	rjmp	.+40     	; 0x2092 <main+0xb20>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    206a:	6f 81       	ldd	r22, Y+7	; 0x07
    206c:	78 85       	ldd	r23, Y+8	; 0x08
    206e:	89 85       	ldd	r24, Y+9	; 0x09
    2070:	9a 85       	ldd	r25, Y+10	; 0x0a
    2072:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2076:	dc 01       	movw	r26, r24
    2078:	cb 01       	movw	r24, r22
    207a:	9e 83       	std	Y+6, r25	; 0x06
    207c:	8d 83       	std	Y+5, r24	; 0x05
    207e:	8d 81       	ldd	r24, Y+5	; 0x05
    2080:	9e 81       	ldd	r25, Y+6	; 0x06
    2082:	9a 83       	std	Y+2, r25	; 0x02
    2084:	89 83       	std	Y+1, r24	; 0x01
    2086:	89 81       	ldd	r24, Y+1	; 0x01
    2088:	9a 81       	ldd	r25, Y+2	; 0x02
    208a:	01 97       	sbiw	r24, 0x01	; 1
    208c:	f1 f7       	brne	.-4      	; 0x208a <main+0xb18>
    208e:	9a 83       	std	Y+2, r25	; 0x02
    2090:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(250);
				LED_voidToggle(arr[led]);
    2092:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2094:	38 a1       	ldd	r19, Y+32	; 0x20
    2096:	c9 01       	movw	r24, r18
    2098:	88 0f       	add	r24, r24
    209a:	99 1f       	adc	r25, r25
    209c:	82 0f       	add	r24, r18
    209e:	93 1f       	adc	r25, r19
    20a0:	9e 01       	movw	r18, r28
    20a2:	2f 5f       	subi	r18, 0xFF	; 255
    20a4:	3f 4f       	sbci	r19, 0xFF	; 255
    20a6:	82 0f       	add	r24, r18
    20a8:	93 1f       	adc	r25, r19
    20aa:	fc 01       	movw	r30, r24
    20ac:	f8 96       	adiw	r30, 0x38	; 56
    20ae:	60 81       	ld	r22, Z
    20b0:	71 81       	ldd	r23, Z+1	; 0x01
    20b2:	82 81       	ldd	r24, Z+2	; 0x02
    20b4:	0e 94 a5 0a 	call	0x154a	; 0x154a <LED_voidToggle>
			{
				LED_voidToggle(arr[led]);
				_delay_ms(250);
				LED_voidToggle(arr[led]);
			}
		for (led=7;led>=0;led--)
    20b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    20ba:	98 a1       	ldd	r25, Y+32	; 0x20
    20bc:	01 97       	sbiw	r24, 0x01	; 1
    20be:	98 a3       	std	Y+32, r25	; 0x20
    20c0:	8f 8f       	std	Y+31, r24	; 0x1f
    20c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    20c4:	98 a1       	ldd	r25, Y+32	; 0x20
    20c6:	99 23       	and	r25, r25
    20c8:	0c f0       	brlt	.+2      	; 0x20cc <main+0xb5a>
    20ca:	5e cf       	rjmp	.-324    	; 0x1f88 <main+0xa16>
    20cc:	b2 ce       	rjmp	.-668    	; 0x1e32 <main+0x8c0>

000020ce <__prologue_saves__>:
    20ce:	2f 92       	push	r2
    20d0:	3f 92       	push	r3
    20d2:	4f 92       	push	r4
    20d4:	5f 92       	push	r5
    20d6:	6f 92       	push	r6
    20d8:	7f 92       	push	r7
    20da:	8f 92       	push	r8
    20dc:	9f 92       	push	r9
    20de:	af 92       	push	r10
    20e0:	bf 92       	push	r11
    20e2:	cf 92       	push	r12
    20e4:	df 92       	push	r13
    20e6:	ef 92       	push	r14
    20e8:	ff 92       	push	r15
    20ea:	0f 93       	push	r16
    20ec:	1f 93       	push	r17
    20ee:	cf 93       	push	r28
    20f0:	df 93       	push	r29
    20f2:	cd b7       	in	r28, 0x3d	; 61
    20f4:	de b7       	in	r29, 0x3e	; 62
    20f6:	ca 1b       	sub	r28, r26
    20f8:	db 0b       	sbc	r29, r27
    20fa:	0f b6       	in	r0, 0x3f	; 63
    20fc:	f8 94       	cli
    20fe:	de bf       	out	0x3e, r29	; 62
    2100:	0f be       	out	0x3f, r0	; 63
    2102:	cd bf       	out	0x3d, r28	; 61
    2104:	09 94       	ijmp

00002106 <__epilogue_restores__>:
    2106:	2a 88       	ldd	r2, Y+18	; 0x12
    2108:	39 88       	ldd	r3, Y+17	; 0x11
    210a:	48 88       	ldd	r4, Y+16	; 0x10
    210c:	5f 84       	ldd	r5, Y+15	; 0x0f
    210e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2110:	7d 84       	ldd	r7, Y+13	; 0x0d
    2112:	8c 84       	ldd	r8, Y+12	; 0x0c
    2114:	9b 84       	ldd	r9, Y+11	; 0x0b
    2116:	aa 84       	ldd	r10, Y+10	; 0x0a
    2118:	b9 84       	ldd	r11, Y+9	; 0x09
    211a:	c8 84       	ldd	r12, Y+8	; 0x08
    211c:	df 80       	ldd	r13, Y+7	; 0x07
    211e:	ee 80       	ldd	r14, Y+6	; 0x06
    2120:	fd 80       	ldd	r15, Y+5	; 0x05
    2122:	0c 81       	ldd	r16, Y+4	; 0x04
    2124:	1b 81       	ldd	r17, Y+3	; 0x03
    2126:	aa 81       	ldd	r26, Y+2	; 0x02
    2128:	b9 81       	ldd	r27, Y+1	; 0x01
    212a:	ce 0f       	add	r28, r30
    212c:	d1 1d       	adc	r29, r1
    212e:	0f b6       	in	r0, 0x3f	; 63
    2130:	f8 94       	cli
    2132:	de bf       	out	0x3e, r29	; 62
    2134:	0f be       	out	0x3f, r0	; 63
    2136:	cd bf       	out	0x3d, r28	; 61
    2138:	ed 01       	movw	r28, r26
    213a:	08 95       	ret

0000213c <_exit>:
    213c:	f8 94       	cli

0000213e <__stop_program>:
    213e:	ff cf       	rjmp	.-2      	; 0x213e <__stop_program>
